{"pages":[{"title":"About","text":"Hello, I’m Meng. I am pursuing a master’s degree in Electronic Information Engineering, and my research interests is readout electronics in particle physics experiments. I am also learning everything related to Computer Science, including software and hardware. I blog to record my learning and insights, and also to unfold my self slowly. I feel as if the blog is a digital river in front of me, which can either flow downstream or backtrack to the pathway place. Although it is still just a small stream, I hope it will flow for a long time. Find me on GitHub, LinkedIn or send me an e-mail.","link":"/about/index.html"},{"title":"Categories","text":"","link":"/categories/index.html"},{"title":"Links","text":"CS FreeCodeCamp Developer Roadmaps OI Wiki CTF Wiki Verilog Learning: HDLbit Linux 101 Math Statistics Visualization Learning Site Useful GitHub Trends: OSS Insight summerschoolsineurope Language 出口日語 E-book Anna’s Archive Library Genesis Zlibrary zhelper search Phd European phd job information CERN LHCb ATLAS Juelich Juelich - Detector Systems TU Dresden 6G-life Helmholtz-Institut Mainz Runology Run to Singapore","link":"/links/index.html"},{"title":"Tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Adaptive Filters","text":"I watched a well organized and concise YouTube video about adaptive filters, which is the focus of an important course I am taking this semester, Digital Signal Processing II. Limitations of fixed-coefficient digital filters Fixed-coefficient digital filters FIR, IIR LP, HP, etc Limitations Time-varying noise-frequency Overlapping bands of signal and noise Adaptive filters 2 main components Digital filter (with adjustable coefficients) Adaptive algorithm 2 input signals: $y_k$ and $x_k$ $y_k = s_k + n_k$ $s_k$ = desired signal $n_k$ = noise $x_k$ = contaminating signal which is correlated with $n_k$, gives an estimate of $n_k$, i.e. $\\hat{n_k}$ Goal: produce optimum $\\hat{n_k}$ $e_k = \\hat{s_k} = y_k - \\hat{n_k} = s_k + n_k - \\hat{n_k}$ Theorem: minimize $e_k$, maximize the signal-to-noise ratio LMS algorithm Wiener filter An input signal w(n) is convolved w ith the Wiener filter g(n) and the result is compared to a reference signal s(n) to obtain the filtering error e(n) Criterion: MMSE (Minimum Mean Square Error) Minimize $J = E[e(n)^2] = E[(x(n) - s(n))^2] = E[(w(n) * g(n) - s(n))^2]$ J can be used to draw the Error-Performance surface The Least mean squares filter converges to the Wiener filter Wiener-Hopf solution Set gradient of J of H to zero, deduced that $H_{opt} = R_{xx}^{-1} R_{xs}$ where $R_{xx} = E(X_k X_k^T)$ $R_{xs} = E(y_k X_k)$ Requires knowledge of $R_{xx}, R_{xs}$ Matrix inversion is expensive For non-stationary, $H_{opt}$ needs to be computed repeatedly LMS adaptive algorithm Version 1: $H(n+1) = H(n) + \\mu (- \\nabla(n))$ Version 2: $H(n+1) = H(n) + \\frac{1}{2}\\delta (- \\nabla(n))$ then $H(n+1) = H(n) + 2\\mu e(n)X(n)$ or $H(n+1) = H(n) + \\delta e(n)X(n)$ where $e(n) = y(n) - H^T(n)X(n)$ $\\mu$ and $\\delta$ are step-sizes Based on the steepest descent algorithm (update H(n) along the opposite direction of the gradient): $H(n+1) = H(n) + \\mu (- \\nabla(n))$ Using instantaneous estimates instead of the means (unbiased): $J = E[e(n)^2] = e(n)^2$ $\\nabla(n) = -2\\mu E[e(n)X(n)] = -2\\mu e(n)X(n)$ Step-size determines stablility and rate of convergence If too large, too much fluctuation If too small, convergences too slow Limitations If the noise is non-stationary, the error-performance surface will change rapidly If $x(n)$ is proportional to $y(n)$, signal will be obliterated H(n) never reached the theoretical optimum (fluctuation) Applications Acoustic echo cancellation Cancelling EOG from contaminated EEG and get correct EEG Cancelling maternal ECG and get foetal ECG during labour Appendix YouTube Video Adaptive Filters Course Home Page Digital Signal Processing II","link":"/Adaptive-Filters/"},{"title":"Andrew Ng's Machine Learning","text":"I finished watching Andrew Ng’s Machine Learning courses! It’s really nice for beginning. Overview Supervised Machine Learning: Regression and Classification Linear regression Logistic regression Gradient descent Advanced Learning Algorithms Neural networks Decision trees Advice for ML Unsupervised Learning, Recommenders, Reinforcement learning Clustering Anomaly detection Collaborative filtering Content-based filtering Reinforcement learning 1️⃣ Machine Learning  Algorithms Supervised learning Maps input x to output y Learns from being given “right answes” 2 major types: Regression: Predict a number Infinitely many possible outputs classification: Predict categories(don’t have to be numbers) Small finite numbers of possible outputs like (0,1) When two or more inputs: find the boundary line Unsupervised learning Supervised learning learn from data labeled with the right answers; Unsupervised learning find something interesting in unlabeled data Input x, but not output labels y. It finds structure in the data Main types: Clustering Anomaly detection Dimensionality reduction Reinforcement learning  Supervised Machine Learning Models Linear regression (one variable) Cost function Gradient descent Learning rate Multiple linear regression (variables) Vectorization Feature scaling (normalization) can make gradient descent method faster Feature engineering Polynomial regression Logistic regression → classification Sigmoid function Decision boundary Apply gradient descent to logistic regression Loss &amp; cost To make logistic cost function convex, use -log and -log(1-) (loss function) and sum Compare linear regression &amp; logistic regression Same Learning curve Vectorized implementation Feature scaling Different Linear regression: $f=\\vec{w} \\cdot \\vec{x}+b$ Logistic regression: $f = \\frac{1} {1+e^{-\\vec{w} \\cdot \\vec{x} + b}}$ Overfitting Addressing overfitting Collect more training example Select features Regularization：reduce the size of parameters $w_j$ Regularization 2️⃣ Neural Network in TensorFlow Numpy arrays &amp; Tensors 12345678x = np.array([200.0, 17.0])layer_1 = Dense(units=3, activation=&apos;sigmoid&apos;)a1 = layer_1(x)# print(a1)# -&gt; tf.Tensor([[0.2 0.7 0.3]], shape=(1,3), dtype=float32a1.numpy()# print(a1)# -&gt; array(…) Building a neural network architecture 123456789model = Sequential([ Dense(units=25, activation=&quot;sigmoid&quot;), Dense(units=15, activation=&quot;sigmoid&quot;), Dense(units=1, activation=&quot;sigmoid&quot;)])x = np.array(...)y = np.array(...)model.compile(...)model.fit(x, y)model.predict(x_new) Training a neural network in TensorFlow 1234567891011121314151617import tensorflow as tffrom tensorflow.keras import Sequentialfrom tensorflow.keras.layers import Dense# Step 1: specify the modelmodel = Sequential([Dense(units=25, activation=&apos;relu&apos;)Dense(units=15, activation=&apos;relu&apos;)Dense(units=1, activation=&apos;sigmoid&apos;))]# Step 2: compile the modelfrom tensorfolw.keras.losses import BinaryCrossentropymodel.compile(loss=BinaryCrossentrpy())# Step 3: train the modelmodel.fit(X, Y, epochs=100) Choosing an activation function Outer layer For binary classification, use sigmoid For regression (+/-) , use linear For regression (+) , use ReLU Hidden layer ReLU is the most common choice Multi-class classification: Softmax 1234567891011121314import tensorflow as tffrom tensorflow.keras import Sequentialfrom tensorflow.keras.layers import Densemodel = Sequential([Dense(units=25, activation=&apos;relu&apos;)Dense(units=15, activation=&apos;relu&apos;)Dense(units=10, activation=&apos;softmax&apos;))]from tensorfolw.keras.losses import SparseCategoricalCrossentropymodel.compile(loss=SparseCategoricalCrossentrpy())model.fit(X, Y, epochs=100) But don’t use this version! More numerically accurate implementation For logistic loss 1234567891011121314import tensorflow as tffrom tensorflow.keras import Sequentialfrom tensorflow.keras.layers import Densemodel = Sequential([Dense(units=25, activation=&apos;relu&apos;)Dense(units=15, activation=&apos;relu&apos;)Dense(units=1, activation=&apos;linear&apos;))]from tensorfolw.keras.losses import BinaryCrossentropymodel.compile(loss=BinaryCrossentrpy(from_logits=True))model.fit(X, Y, epochs=100) For softmax 123456789101112131415161718import tensorflow as tffrom tensorflow.keras import Sequentialfrom tensorflow.keras.layers import Densemodel = Sequential([Dense(units=25, activation=&apos;relu&apos;)Dense(units=15, activation=&apos;relu&apos;)Dense(units=10, activation=&apos;linear&apos;))]from tensorfolw.keras.losses import SparseCategoricalCrossentropymodel.compile(loss=SparseCategoricalCrossentrpy(from_logits=True))model.fit(X, Y, epochs=100)# predictlogits = model(X)f_x = tf.nn.softmax(logits) Adam algorithm Adam: Adaptive Moment estimation Changing the learning rate adaptively; faster 12345678910111213# Modelmodel = Sequential([Dense(units=25, activation=&apos;sigmoid&apos;)Dense(units=15, activation=&apos;sigmoid&apos;)Dense(units=10, activation=&apos;linear&apos;))]# Compilemodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3),loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True))# Fitmodel.fit(X, Y, epochs=100) Convolutional layer Each neuron only lokoks at part of the previous layer’s input Faster computation; need less training data (less prone to overfitting) Evaluating a model Split the data into 3 parts: Training set Cross validation set (validation / development / dev set) Test set When you’re making decisions about the model, only use training set and dev set, and not look at the test set at all. After you decide the final model, evaluate it on the test set Bias / variance Bias is the gap of training error and baseline Variance is the gap of cross validation error and baseline Regularization 1layer = Dense(units=25, activation=&quot;relu&quot;, kernel_regularizer=L2(0.01)) Transfer learning Download neural network parameters pretrained on a large dataset with same input type (e.g., images, audio, text) as your application Fine tune the network on your own data Full cycle of a machine learning project Define project Define and collect data Training, error analysis &amp; iterative improvement Deploy, monitor and maintain system Confusion matrix, precision, recall Precision = true positives / (predicted positives) = true pos / (true pos + false pos) Recall = true positives / (actual positives) = true pos / ( true pos + false neg) Tradeoff: High threshold → higher precision, lower recall; Low threshold → lower precision, higher recall F1 score = $\\frac{1}{\\frac{1}{2}(\\frac{1}{P}+\\frac{1}{R})}$ calculates an average that pays more attention to whichever is lower (the harmonic mean of P and R) Decision tree model Decision tree predicts category Regression tree predicts number Tree ensembles (more robust; use sampling with replacement) : Random forest XGBoost (eXtreme Gradient Boosting): more likely to pick examples that the previously trained trees misclassify 1234567891011# Classificationfrom xgboost import XGBClassifiermodel = XGBClassifier()model.fit(X_train, y_train)y_pred = model.predict(X_test)# Regressionfrom xgboost import XGBRegressormodel = XGBRegressor()model.fit(X_train, y_train)y_pred = model.predict(X_test) Decision trees vs Neural networks: Decision trees Neural networks Working well on which data Structured (tabular) data Structured data and unstructured (images, audio, text) data Speed Fast Maybe slower Transfer learning No Yes Interpretability Maybe yes No Building a system of multiple models Hard Easy 3️⃣ Unsupervised Learning Clustering K-means Step 1: Randomly initialize K cluster centroids; Step 2: Assign each point to its closest centroid; Step 3: Recompute the centroids utill they converge. How to choose K? Elbow method Evaluate K-means based on how well it performs for later purpose Anomaly detection Step 1: Choose n features that you think might be indicative of anomalous examples; Step 2: Fit a Gaussian distribution; Step 3: Given new example x, compute p(x), anomaly if p(x) &lt; epsilon Anomaly detection Supervised learning Large number of negative (y=0) examples, very small number of positive examples (y=1) Large number of positive and negative examples Future positive examples: previously unseen, brand new Future positive examples: previously seen, similar Recommended Systems Collaborative filtering Finds related items Automatically finds the derivative 12345678910111213w = tf.Variable(3.0)x = 1.0y = 1.0alpha = 0.01# Auto Diffiteration = 30for iter in range(iteration): with tf.GradientTape() as tape: fwb = w*x costJ = (fwb - y)**2 [dJdw] = tape.gradient(costJ, [w]) w.assign_add(-alpha*dJdw) You can also use the Adam optimization algorithm Content-based filtering 12345678910111213141516171819202122232425user_NN = tf.keras.models.Sequential([ tf.keras.layers.Dense(256, activation=&apos;relu&apos;), tf.keras.layers.Dense(128, activation=&apos;relu&apos;), tf.keras.layers.Dense(32)])item_NN = tf.keras.models.Sequential([ tf.keras.layers.Dense(256, activation=&apos;relu&apos;), tf.keras.layers.Dense(128, activation=&apos;relu&apos;), tf.keras.layers.Dense(32)])input_user = tf.keras.layers.Input(shape=(num_user_features))vu = user_NN(input_user)vu = tf.linalg.l2_normalize(vu, axis=1)input_item = tf.keras.layers.Input(shape=(num_item_features))vm = item_NN(input_item)vm = tf.linalg.l2_normalize(vm, axis=1)output = tf.keras.layers.Dot(axes=1)([vu, vm])model = Model([input_user, input_item], output)cost_fn = tf.keras.losses.MeanSquaredError() Collaborative filtering Content-based filtering Recommend items to you based on Ratings of users who gave similar ratings as you Features of users and items to find a good match Mean normalization makes the algorithm faster and better Reinforcement Learning Reward function “Good dog”, “bad dog” Return The return is the sum of the rewards, weighted by the discount factor It depends on the actions you take Policy A policy is a function pi(s) = a mapping from states to actions The goal of reinforcement learning is to find a policy pi so as to maximize the return Markov Decision Process (MDP) “Markov” refers to that the future only depends on the current state, not on anything that might have occurred prior to getting to the current state In MDP, the future only depends on where you are now, not on how you got here State action value function (Q-function) Q(s, a) = return, if you: Starts in state s Take action a (once) Then behave optimally after that The best possible return from state s is maxQ(s, a) The best possible action in state s is the action a that gives maxQ(s, a) Bellman equation Q(s, a) = R(s) + gamma*maxQ(s’, a’) R(s) is the reward you get right away Gamma*maxQ(s’, a’) is the reward from behaving optimally starting from the next state s’ DQ (Deep Q) algorithm 1234567891011121314151617Initialize neural network randomly as guess of Q(s,a).Repeat{ Take actions in the lunar lander. Get (s, a, R(s), s’). Store 10000 most recent (s, a, R(s), s’) tuples. Train neural network: Create training set of 10000 examples using x = (s, a) and y = R(s) + gamma * maxQ(s’, a’) Train Q_new such that Q_new (s, a) = y. Set Q = Q_new. } Refinement Epsilon-greedy policy Eg. epsilon = 0.05. It means With probability 0.95, pick the action a that maximizes Q(s, a),greedy, “exploitation” With probability 0.05, pock an option a randomly, “exploration” It’s good to set epsilon high at the beginning and gradually decrease Mini batch Faster Soft update Change “set Q = Q_new” (i.e. W,B = W_new,B_new) to W = 0.01W_new + 0.99W B = 0.01B_new + 0.99B","link":"/Andrew-Ng-Machine-Learning/"},{"title":"Apr 2023","text":"The two most important things this month: got a cat and my boyfriend received a phd offer from Germany (so I also started to pay attention to phd in German). Berber arrived! On the night of April 10, I heard a cat barking outside my door, and when I opened it, it came in. I asked the neighbors in the neighborhood group if it was a lost cat, but no one claimed it, so I decided to keep it. Then, in the past month, I learned a lot about cat! It turned out to be such a complicated thing. My understanding of cats as creatures has also changed, this also good and evil, instinct first elf … My boyfriend received an offer The dream came true! I am very happy for him! And I began to be anxious … I decided to collect some information. European phd job information Recruitment in research institutions: CERN LHCb ATLAS Juelich Juelich - Detector Systems University vacancies: TU Dresden 6G-Life Helmholtz-Institut Mainz PCB progress Making final changes now… It should be done and tested this month, looking forward to it! (Don’t make any mistakes!)","link":"/Apr-2023/"},{"title":"Basic MATLAB (very basic)","text":"I watched an introductory tutorial on LinkedIn Learning in order to write computer assignments in MATLAB (I really forgot it all after not using it for two or three years). General concepts Clear commands clc clears the screen clear myVar deletes variable myVar clear all deletes all variables Create variables Creating a scalar: myScalar = 10 Creating a vector: Row vector: myVector = [4 5 6] Column vector: myVectorCol = [7; 8; 9] Creating a matrix: myMatrix = [4 5 6; 7 8 9; 1 2 3] myMatrix(1, 2) gets 5 myMatrix(2, :) gets all columns which are in row 2 myMatrix(3, 2:3) gets row 3, column 2 and 3 Using “;” at the end of command line means it will suppress (i.e. don’t show) the result Variable classes double (default) format long changes double class to long class double, long, short, single, logical (boolean), etc Cell arrays A matrix which has different kinds of elements myCell = {[1 2 3] [4 5 6 7]; &apos;v1&apos; &apos;v2&apos;} myCell{1, 2} gets [4 5 6 7] Core syntax Script “.m” file Comment: % disp(): display something randi(): random integers To tanspose a matrix: matrix&apos; Matrices Create some standard matrices: zeros(m, n) ones(m, n) randi(m, n) Matrix multiplication Standard multiplication: M1 * M2 Element by element multiplication: M1 .* M2 Division is alike Element by element division: M1 ./ M2 If statements 1234567if ... ...elseif ... ...else ...end Switch statements 12345678switch ... case ... ... case ... ... otherwise ...end For loops 1234567891011% step = 1for i = 1: 10 ...end% step = 2% for i = 1: 2: 10% n =25;% step = 5;% for i = 0: step: n While loops 123while ... ...end Programming Set path If MATLAB can’t find your scripts or functions or anything else, make sure you have added the path Function Create a function from “Current Folder”, and it’s a .m file Edit the pattern and wirte your function Import data To import a CSV file: Copy and paste it to “Current Folder” csvread(&apos;sine.csv&apos;) Debugging Set breakpoints at little dashes in the left of Editor Performance Preallocate some memory can speed large calculations Use “tik … tok” to count the time Data representations Plot 123figure% figure(1)plot(x, y) Add a grid: grid on Make the window fits perfectly to the plot: axis tight Set limits to axis: ylim([-1 1]) Change the color: plot(x, y, &apos;m&apos;) % magenta Change the marker: plot(x, y, &apos;o&apos;) % circle, magenta Plot curves multiple times with different lines: hold on. To end it, use hold off Add annotations: xlabel(), title(), legend() Use close all to close all figures Image Use imread() to import the image file Use image() to plot the image (default square) Use imshow() to plot the image in the correct aspect ratio, and there’s no label on the axis 3D plot 12345678x = -2*pi:.5:2*pi;[X, Y] = meshgrid(x);Z = sine(X) + cos(Y);figuresurf(X, Y ,Z)colorbar Simulink A block diagram tool that can be used to build systems and feedback loops, generate code for hardware like FPGAs, etc Appendix Tutorial Learning MATLAB","link":"/Basic-MATLAB/"},{"title":"Basic Components of Particle Physics Experimental Electronics","text":"The particle physics experimental electronics system consists of four main components: Front-End Electronics (FEE), Trigger System, Data Acquisition System (DAQ), and Slow Control. This note focuses on FEE. 1 Front-End Readout Electronics Front-end readout electronics carries out necessary pre-processing (e.g., amplification, digitization, etc.) of the weak electrical signal output from the detector and converts it into data reflecting the characteristics of the particle for use in the trigger selection system and DAQ system. Front-end readout electronics mainly has charge (energy) measurement, time measurement, and instance counting three functions. 1.1 Charge measurement Charge measurement is to measure the charge of the detector output signal. Particles passing through the detector is the process of ionization, excitation or photoelectric conversion of the detector, etc. The charge of the output signal is often proportional to the energy consumed by the particles in the detector. Structure: preamplifier + long cable + main amplifier + shaping circuit + ADC + data cache + readout interface 1.2 Time measurement Time measurement is the measurement of the appearance time of the detector output signal (meaning the time interval against a certain reference signal t0). It requires the measurement of two data: the determination of the moment of appearance of the measured signal by the timing retort circuit; and the conversion of the time interval between the measured signal and the reference signal t0 into digital data by the time-to-digital conversion (TDC) circuit. Structure: Preamplifier + long cable + timing discriminator + TDC + data cache + readout interface The mainstream solution is full digital counter technology + time interpolation. The full digital counter technology is generally achieved by high-performance Gray code counters (i.e., digital counter-type TDC), using a reference clock frequency of several hundred megahertz to achieve a time resolution of a few ns. The time interpolation is performed within a clock cycle to achieve sub-nanosecond (100 ps ~ 10ps) time resolution. 1.3 Incident counting Incident counting is the necessary amplification and differentiation of the detector output signal to get a “yes” or “no” message and record it. Sometimes we only need to know if a particle has hit the corresponding position, not to measure the charge or time of the signal (as in the case of the BES III µ-detector). Structure: preamplifier + long cable + timing screening + register/counter + data cache + readout interface 1.4 Preamplifier 1.4.1 Classification Integral type (charge-sensitive preamplifier, voltage-sensitive preamplifier): the output signal amplitude is proportional to the integral of the detector output current signal over time (i.e., the total charge of the detector output) Current type (current-sensitive preamplifier): the output signal waveform is consistent with the waveform of the detector output current signal 1.4.2 Three main types of preamplifiers Charge-sensitive preamplifier More complex circuit, good performance, low noise, most commonly used. $V_{output}=-\\frac{Q}{C_{feedback}}$ Voltage-sensitive preamplifier Simpler circuit (actually a voltage amplifier), poorer performance, more noise than charge-sensitive preamplifier. $\\frac{V_{output}}{V_{input}}=-\\frac{R_{feedback}}{R_{series}}$ Current sensitive preamplifier It is actually a current amplifier. It is generally used for obtaining accurate time information, intensity measurement systems in high count rate or high background cases, energy spectrum measurement systems, etc. 1.5 ADC Linear discharge ADC, successive comparison ADC (SAR ADC), pipeline ADC (Pipeline ADC), flash ADC (Flash ADC). 2 Trigger System Real-time analysis of data provided by the front-end electronics to select instances of physical interest from a large number of false instances (background) data, while discarding false instances (background) data. Components: Trigger subsystem (feature extraction), total trigger (determination classification), and clock system. 3 Data Acquisition System (DAQ) Screening of retained instance data of physical interest and collection and assembly into a complete instance data, recorded to be available to physicists for off-line analysis. Appendix http://bes.ihep.ac.cn/bes3/internal/workshop/06electronics/anqi.pdf","link":"/Basic-Components-of-Particle-Physics-Experimental-Electronics/"},{"title":"Creating Packages in Allegro PCB Editor","text":"Take the production of regular shaped SMD (Surface Mounted Devices) as an example. Making pads Check the package parameters in the datasheets; Open Pad Designer and create a new pad file (.pad); Set the pad parameters Parameters: Set “Units” and “Decimal places”. Generally, the maximum precision is 2 when the unit is “mils”, and 4 when the unit is “millimeter”. Layers: To make surface pads, you need to check the “Single layer mode” and set three layers: BEGIN_LAYER; SOLDERMASK_TOP (indicating that this part is not painted with green oil when making the board, thus giving the pads a window to ensure that the pads are exposed and are actually allowed to solder the area); PASTEMASK_TOP (indicating that this area should be coated with solder when soldering) parameters. Note that SMD does not need to fill in the “Thermal Relief” and “Anti Pad”. Generally, the parameters of “PASTEMASK_TOP” are the same as “BEGIN_LAYER”, and “SOLDERMASK_TOP” is 0.1mm larger than the previous two. Making packages Placing pads Open PCB Editor and select “Package symbol” in “Drawing Type” then create a new package file (.dra); Modify the size of grids appropriately; Add the pad file directory: Setup - User Preferences - Catagories - Paths - Library - add the above pad directory to padpath, psmpath, devpath; Add pad pins: Layout - Pins - Select Connect - Select pads from Padstack. Drawing packages The package includes (bolded red is mandatory, italic is highly recommended) At least one pin (i.e. pads); Graphic border (i.e. Assembly_Top subclass and Silkscreen_Top subclass of the Package Geometry class), indicating pin 1; Reference number (i.e. at least one subclass of the Ref Des class, usually using the Silkscreen_Top subclass and sometimes drawing the Assembly_Top subclass in passing), placed near the package; Installation Area (i.e. Place_Bound_Top subclass in the Package Geometry class). After saving the file, you will get a .dra file (drawing file, which can be opened to edit the package); a .psm file (data file, which cannot be edited directly, but is necessary when importing the netlist in the .brd file). Note that Draw the outer frame for assembly on “Assembly_Top”; Draw the silkscreen pattern on “Silkscreen_Top”; Draw the area without electrical rules to prevent overlapping of devices on “Place_Bound_Top”; It is highly recommended to put pads, vias and device package files (.dra and .psm) in the same folder. Importing Creating a board Open PCB Editor, select “Board” in “Drawing Type”, create a new board file (.brd), and set the page size and grid point size; Draw the outer frame of the PCB: Add - Line, select “Board Geometry” in class, select “Outline” in subclass; Draw the allowed wiring areas “Route Keepin”: Setup - Areas - Route Keepin. It is recommended that it is 30~40mil from the outer frame; Draw the area “Package Keepin” where the device is allowed to be placed: Edit - Z-copy - Size: Contract - Offset: 1. Generally, indent the “Package Keepin” by 1mil than the “Route Keepin”; Place the mounting holes and make them tangent to the frame of the “Package Keepin”. Setting the structure Take a 4-layer board as an example, from top to bottom are TOP (top alignment layer); GND (ground copper plane); POWER (power layer copper plane); BOTTOM (bottom alignment layer). Setup - Cross-section - add the middle layer; Set the type of each layer (CONDUCTOR for the alignment layer, DIELECTRIC for the media layer, PLANE for the copper plane of power layer and ground layer); Name each layer; Set the positive and negative piece (the alignment layer is positive, that is, the drawing is the part to be kept; the copper plane is negative, that is, the drawing is the part to be discarded). Laying copper in the inner electric layers With “Route Keepin” drawn, you can use Z-copy to lay copper on the inner layer. At this point, the copper laying of the inner electrical layer is only temporary, just in order to facilitate the subsequent wiring to see if the over-hole is too close. Like the adjustment of the outer frame of the board, the copper plane of the inner layer will be readjusted (i.e., copper re-laying) when the layout wiring is determined. Select “GND” or “POWER” (respectively for the GND layer and POWER layer copper laying) in “Options”, select “Create dynamic shape” (to prevent short circuit); Set GND layer “Offset” to 0, POWER layer “Offset” to 40mil (the power layer needs to be indented 40 mil from the ground layer to reduce the outward radiation from the edge of the plate); Select “Shapes” in “Find”; Turn off the rest of the internal electrical layer display in “Visibility” (so that when laying copper, you can clearly see whether the copper laying is successful). You can also directly lay dynamic copper in the GND layer and POWER layer, and then merge and adjust the shape of copper. Importing the netlist File - Import - Logic - Design entry CIS (Capture) - Import directory - Import Cadence If a window pops up, modify it according to the error report and then re-import; no window pops up means the import is successful.","link":"/Creating-Packages-in-Allegro-PCB-Editor/"},{"title":"Dec 2022","text":"This month was supposed to be the month of exams, so I dedicated my time to reviewing the three main lessons in school: Digital Signal Processing, Digital Image Analysis and Combinatorial Mathematics. I made some notes (all in Chinese), and bookmarked some nice links. Review Notes DSP notes on Notion or on GitHub (some MATLAB code) DIA notes on Google Drive (updating…) Combinatorial Mathematics notes on Google Drive (updating…) Another thing worth mentioning is that this month ChatGPT went viral! I also tried it. It’s amazing I have to say. Here are some interesting or useful links I saw about ChatGPT. Awesome ChatGPT Official Introduction awesome-chatgpt There are many trending repos related to ChatGPT recently. ChatGPT available in mainland China Guide to registering an OpenAI account in China to try ChatGPT Virtual number for receiving SMS online First Experience of ChatGPT ChatGPT Chinese VSCode plugin Hand sketching in Jupyter Notebook, and turning it into code Other Interesting Pages Telegram Guide fernwanderweg.blogspot.com He used Google blogger to bulid a blog. Looks good. The last three are several top repositories with the great number of stars on GitHub. I was surprised to find that 996.icu was in top 3 . Languages Unfortunately I didn’t take the IELTS . I wasn’t ready… I’ll do it later! As for learning Japanese, I dont’t use Duolinguo anymore since it’s a bit simple. I found some YouTube videos to watch and learn, like 出口日語. Blog I changed the theme of my blog from Cactus to Ascent. By the way, here’s my stars list about blog themes. I tried to edit a theme to fit my purpose but failed. Frontend is so difficult!","link":"/Dec-2022/"},{"title":"Design of STCF MDC FEE daughterboard","text":"","link":"/Design-of-STCF-MDC-FEE-daughterboard/"},{"title":"Drawing Schematics in OrCAD Capture CIS","text":"I started drawing PCBs for a project. Firstly, I’m learning to draw schematics using OrCAD Capture CIS. Here are some basic concepts and operations. Project Create new project Modify schematic preferences Modify schematic description Library Create new library Modify library storage location Part Create new part in library Place part Modify part properties Modify footprint View entire part Batch modify pin properties Snap to grid Package Homogeneous: each module of the composite package has the same function Each module is distinguished by the letter after the question mark, such as “U?A” and “U?B” After drawing “U?A”, switch to the next part “U?B”, which has already been drawn automatically, only the pin numbers are left blank The shortcut for switching to the previous part is “Ctrl+B”, and the shortcut for switching to the next part is “Ctrl+N” For a part, if it can be represented by one diagram, then the part cannot have two pins with the same pin number and pin name. However, if the part is divided into many parts to draw, the pin numbers and pin names between the parts can be the same, and the pins with the same pin number and pin name are connected Heterogeneous: each module of the composite package has a different function After drawing “U?A”, switch to the next part “U?B”, which is blank If there are two or more composite packages placed in a schematic to avoid errors when indexing with “Annotate”, a new attribute should be added to the part (the name cannot be “group”), and each part will be divided into different groups according to whether the value of the new attribute is the same. This can determine which parts are in the same chip. Adding parts to schematic Rotate parts Parts not in the library: power, ground Cadence’s built-in library: Cadence - SPB_16.6 - tools - capture - library Generally commonly used capacitors, resistors, inductors, transformers, etc. are in Discrete.olb Design Cache Pin connection 3 types of connections: wire, net alias, bus Wire shortcut key W The lines in the schematic are horizontal and vertical by default. To draw at any angle, press the Shift key and click the start and end points of the line at the same time When two lines intersect, if the intersection is an endpoint of one of the lines, the two lines are electrically connected and the electrical connection cannot be canceled. If the intersection is not an endpoint, there is no electrical connection by default Place junction to add electrical connection to the intersection Place net alias for interconnection within the same page Place off-page connector for interconnection between pages Place no connect for floating pins Do not connect two pins of two parts directly (after connecting the two pins of the two parts, pull them apart, and a line will appear between the two pins) Bus connection Bus naming BaseName[0:all] There cannot be a space between BaseName and [ 32-bit bus ED is represented as ED[0:31] BaseName cannot end with a number The colon “:” in the brackets can be replaced with a hyphen “-” or two dots “…” Bus entry naming BaseName0 BaseName1 BaseName2… Interconnection between the bus and the signal line must be through the bus entry, and the naming must be consistent through net alias Shortcut key F4 for quick wiring Browsing and searching Browse parts Reset all parts references to “?” and incremental reference update through Tools - Annotate - Packaging - Action Browse nets Browse off-page connectors Browse DRC markers If there are errors that have been corrected, the DRC markers need to be updated synchronously Individual schematic can also be browsed by selecting it Search Replacement and update Differences between the two Replacement can change the connection relationship between the schematic and the library, that is, replace the part in the original library with the part in another library, while update cannot If the new part has a different packaging form from the original part, such as the original part’s packaging form is “Homogeneous”, and the new part’s packaging form is “Heterogeneous”, then to replace the new part’s packaging form with the original part’s packaging form, only replacement can be used, and “Action” must be selected as “Replace schematic part properties”: Cleanup Cache to remove non-existent copies of parts Operating objects in schematic Select multiple objects at the same time Move object The object can be directly dragged, and the connection relationship between the object and other objects remains unchanged Press and hold Alt while dragging, the connection relationship between the object and other objects will be disconnected After disconnection, can the object be reconnected through contact Options - Preferences - Miscellaneous - Wire Drag: Allow parts move with connectivity changes Rotate object R Copy, paste, delete Select the object, hold down the Ctrl key to drag, and the object dragged out is the copied object Mirror object H V Adding footprints Modify the package information of a single part in the schematic Modify the package information of a single part in thelibrary, update to the schematic - open the edit page of a part - Options - Package Properties - PCB Footprint - OK, and finally Replace (not Update) Batch modify part package information Batch modify the package information of all parts on a schematic page Check whether the part package information is missing Generating netlist Check the logical function and electrical connection of the schematic before generating, re-index the entire project, and perform DRC check Post-processing Generate nestlist Print schematic","link":"/Drawing-Schematics-in-OrCAD-Capture-CIS/"},{"title":"Feb 2023","text":"School has started. Although I finished organizing my notes before the exams, I still walked out of the exam room in pain. So far I only have a DSP score, 78, and I feel like I did worse on the remaining two classes that haven’t come out yet, so I don’t know how bad it will be … Discovery this month 類 Wandering Douban After being gravedigged, deleted and banned for a week by Douban for no reason, I angrily searched for alternative apps. Here are a few options. Tagging books, movies and music: NeoDB See this post for how to use it. Combined with Doufen, you can migrate all the data over.You can also mark those banned entries on NeoDB. Tagging movies: Letterboxed Tagging books: Goodreads This blog “Douban Escape Plan” talks about how to migrate data to Notion I didn’t try it, but it looks very detailed and feasible. Reviewing digital image analysis, I found two good pages. Traditional CV Algorithms - Edge Detection - Textbook Collection A very comprehensive introduction. SUSAN operator The author of the entry is actually my lecturer (ﾟoﾟ;; Looking through the LUG group chat logs, I found Linux C Programming One-Stop Learning. I also found a Tsinghua teacher’s Internet of Things tutorial when I was reviewing. When I was surfing Twitter, I found a blogger’s weekly report on RisingWave. I don’t understand it but I like the weekly report. In Japanese class, the teacher recommended the website Japanese Culture Center. Progress this month  I’ve been watching and collecting internship information (but I haven’t submitted my resume). I continued learning “Linux 101” and Andrew Ng’s Machine Learning videos (other studies are still on hold). I did sports a few times. I started drawing PCB! It’s hard! But it dose not annoying. Let’s start with PCB just like Stephen Chow started with playing a small role! Books and movies  始于极限：女性主义往复书简 I have passionately recommended to quite a few people. 我的阴阳两界 It helped me get through this somewhat difficult winter holiday. A novel that can be enjoyed is rare. 3 of the 11 movies I watched this month that I recommend the most — The Passengers of the Night Éric Rohmer’s fans really love it! The time to live and the time to die Poignant and true. Aftersun As many people have said, it’s even more impressive after you watch it. Finally, a cool screenshot of Chantal Akerman:","link":"/Feb-2023/"},{"title":"Git Learning Notes","text":"I finally went through the tutorial. I learned Git because I wanted to be proficient with GitHub, but now I realize that Git is the core of the deepest mystery  Introduction Git is developed in C Centralized &amp; Distributed Version Control Systems Centralized: the repository is stored on a central server; the biggest problem is that you have to be connected to the Internet to make it work. Distributed: no “central server”, everyone has a complete repository on their computer, no network required; much more secure; usually there is a computer that acts as a “central server”, but this server is only used to facilitate “swapping” everyone’s changes; extremely powerful branch management Creating a repository A repository can be simply understood as a directory in which all files can be managed by Git, and each file’s modifications and deletions can be tracked by Git so that the history can be tracked at any moment, or “restored” at some point in the future. Creating a repository step1: Create an empty directory step2: Initialize, git init. Put a file into the Git repository git add git commit Time machine shuttle git status to see the status of the workspace git diff to see what was changed Version fallback git reset --hard commit_id version fallback git reset --hard HEAD^ In Git, you use HEAD for the current version, the last version is HEAD^, the previous version is HEAD^^, and up to 100 is written as HEAD~100 git reset --hard 1094a It’s not necessary to write the full version number (commit id), the first few bits will do, Git will automatically find it git log to see the commit history show the commit log from most recent to furthest back (if that’s too much, add the -pretty=oneline argument) git reflog to see the command history You can find the version number Working Directory &amp; Stage Working Directory: The directory you can see on your computer Repository: There is a hidden directory .git in the workspace, which is not considered a working directory, but a Git repository. The important things in the repository are Staging area: stage (or index) branches: the first branch master that Git automatically creates for us Pointer: a pointer to master called HEAD. All the changes to the file that need to be committed are put into the staging area, and then all the changes in the staging area are committed at once Managing Changes Git tracks and manages changes, not files. Every time you make a change, if you don’t add it to the staging area with git add, it doesn’t get added to the commit. add only adds to the staging area, commit goes to the repository, and all the same files in the staging area are overwritten. Unding changes git restore -- file discards the changes and puts the file back in the state it was in when you last git commit or git add. -- is important, without --, it becomes a “switch to another branch” command git restore --staged undoes the changes in the staging area and puts them back in the workspace Note. The original git checkout can be replaced with git restore The original git reset HEAD can be replaced with git restore --staged The latest version of the git prompt has been replaced with restore To summarize. Case 1: You made changes in the workspace and didn’t add them to the staging area, so you want to undo the changes in the workspace with git restore file Case 2: You made changes in the workspace and added them to the staging area with git add, but did not commit them; if you want to undo them, there are two steps: 1. Case 3: After making changes in the workspace, and git add git commit adds and commits the content, you want to undo this commit, directly use git reset --hard HEAD^ to roll back the version, which will ensure that the workspace, staging area, and repository are all the same as the last one Deleting files git rm If a file has been committed to the repository, then you never have to worry about deleting it by mistake, but be careful, you can only restore the file to the latest version and you will lose what you have changed since the most recent commit When you delete a useless file directly in the file manager, or with the rm command, you have two options next. Do delete the file from the repository, then use the command git rm to delete it, and git commit If you deleted the wrong file, use git checkout to restore the wrongly deleted file from the repository to the latest version Remote repositories The transfer between the local Git repository and the GitHub repository is encrypted via SSH Adding a remote repository git remote add origin git@server-name:path/repo-name.git When associating a remote repository, you must assign a name to the remote repository, origin is the default convention After the association, use the command git push -u origin master to push all the content of the master branch for the first time After that, you can use the command git push origin master to push the latest changes whenever necessary after each local commit Deleting the remote repository git remote rm &lt;name&gt; Before using it, it is recommended to check the remote repository information with git remote -v It just unbinds the local and remote, it does not physically remove the remote repository. There are no changes to the remote repository itself. To actually delete the remote repository, you need to log in to GitHub and find the delete button on the backend page before deleting it Cloning from a remote repository ssh: git clone git@github.com:your name/repo name.git Faster https: git clone http://github.com/yourname/reponame.git Branch management Creating and merging branches git checkout -b or git switch -c creates and switches Equivalent to git branch (create) + git checkout or git switch (switch) git branch to see the current branch will list all branches, with a * in front of the current branch git merge merges the specified branch into the current branch git branch -d delete branches Creating, merging, and deleting branches is very fast, so it’s best to use a branch to complete a task, merge it, and then delete the branch, which is the same as working directly on the master branch, but a much safer process Resolving conflicts Manually edit the file that failed the Git merge to what we want it to be, and then commit it Branch Management Strategy Branching strategy The master branch should be very stable, i.e. only used for new releases, no work should be done on it. The dev branch is unstable, work is done on the dev branch; at some point, for example, when version 1.0 is released, the dev branch is merged into the master branch and version 1.0 is released on the master branch All team members work on the dev branch, and everyone has their own branch, so just merge it to the dev branch from time to time Normal mode when merging branches: add -no-ff parameter This way the merged history has branches and you can see that a merge was done, while a fast forward merge will not show that a merge was done Bug branch When you fix a bug, you create a new bug branch to fix it, then merge it, and finally delete it git stash saves the worksite, then goes to fix the bug, and after fixing it, there are two ways to get back to the worksite. git stash apply, the stash content is not deleted, you need to use git stash drop to delete it git stash pop, which removes the stash content while restoring it git stash list to see what’s in the stash, then use git stash apply stash@{0} to restore to the specified stash (in this case, stash@{0}) For bugs fixed on the master branch that you want to merge into the current dev branch, you can use git cherry-pick &lt;commit&gt; to “copy” the changes from the bug commit to the current branch to avoid duplication of effort Feature branch To develop a new feature, it is best to create a new branch If you want to discard a branch that has not been merged, you can force it to be deleted with git branch -D &lt;name&gt; Multi-author collaboration git push origin &lt;branch-name&gt; to push your own changes If the push fails, the remote branch is newer than your local branch and you need to try to merge it with git pull first If git pull prompts no tracking information, then you need to use git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt; to establish a link between the local and remote branches If there is a conflict in the merge, resolve the conflict and commit locally If there is no conflict, or if the conflict is resolved, push with git push origin &lt;branch-name&gt; Rebasing Organize the history of unpushed forked commits locally into straight lines Purpose: To make it easier to see how commit history has changed, since forked commits require a three-way comparison Tag management A tag is a meaningful name that is easy to remember and is tied to a commit If the commit appears in both the master branch and the dev branch, then the tag can be seen on both branches Creating the tag git tag &lt;tagname&gt; creates a new tag The default is HEAD, but you can also specify a commit id Tags created are only stored locally and are not automatically pushed to the remote git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot; Create tags with descriptions git tag to see all tags Instead of listing them chronologically, alphabetize them git show &lt;tagname&gt; to see tag information Manipulating tags Push git push origin &lt;tagname&gt; push a local tag to the remote git push origin --tags push all unpushed local tags to the remote at once Delete git tag -d &lt;tagname&gt; Delete a local tag Delete a remote tag: first from local (with the above command), then from remote with git push origin :refs/tags/&lt;tagname&gt; Using GitHub You can fork any open source repository You have read and write access to the repository after fork Push a pull request to the official repository to contribute code Using Gitee Domestic Git hosting service Similar to GitHub Customizing Git git config --global color.ui **true** Make Git display colors to look more eye-catching Ignoring special files Github official .gitignore file collection Principles of ignoring files. Ignore files automatically generated by the operating system Ignore compile-generated intermediate files, executables, etc. Ignore configuration files with personally sensitive information git add -f filename is ignored but forced to be added !filename exception file .gitignore online generator Configuring aliases -git config --global **alias**.st status sets st to represent status -global is a global parameter for the current user, i.e. it makes the command useful for all Git repositories on this computer; if you don’t add it, then it’s only useful for the current repository Git configuration files for each repository are placed in the .git/config file The current user’s Git configuration file is placed in a hidden file .gitconfig in the user’s home directory To remove an alias, just delete the line after [alias] that corresponds to the alias Setting up a Git server You need a machine running Linux (Ubuntu or Debian is recommended). See here Using Sourcetree Free Git GUI tool Appendix Tutorial Liao Xuefeng’s Git course Links Git Cheat Sheet Git Official Website","link":"/Git-Learning-Notes/"},{"title":"Fundamentals of Electronics","text":"Recently, when I drew the PCB, I felt that I was not familiar with a lot of electronics, so I searched Wikipedia to organize the basics. History of Electronics Vacuum Tube Period Vacuum tube can be divided into diode, triode, tetrode, pentode and compound tube, etc. In 1904, John Ambrose Fleming invented the diode, and in 1906, Lee De Forest invented the triode. Electronics at this time was mainly “radio technology”. Transistor and Integrated Circuit Period In 1948, John Bardeen, Walter Houser Brattain and William Shockley of Bell Labs invented the transistor. In 1958, Jack Killby invented the Integrated Circuit (IC). ⭐️Diode Early vacuum diodes, later semiconductor diodes were developed. Structure A crystalline sheet of semiconductor properties is connected to two terminals by a PN junction. PN Junction A piece of semiconductor crystal (e.g. silicon crystal) is doped with a small amount of phosphorus on one side so that the free electron concentration is higher and negatively charged, an N-type semiconductor, and a small amount of boron on the other side so that the hole concentration is higher and positively charged, a P-type semiconductor. The contact surface in the middle forms a transition layer and becomes a PN junction. Characteristic Diodes only allow current conduction in one direction, i.e. current flow in the forward direction and blocking in the reverse direction. The current-voltage characteristic curve of a diode is nonlinear. ⭐️Triode The vacuum triode has an amplifying function and was the first electronic amplifier. It was replaced by the transistor from the 1970s onwards. ⭐️Transistor Structure A transistor is made of three parts of semiconductor with different degrees of doping. The boundary between two different dopants forms a PN junction, so there are NPN type and PNP type. It has three external endpoints (called poles). Characteristic When a transistor operates in the linear region, it becomes an “amplifier”. It is commonly used in analog circuits. When the transistor is either completely off or completely on, it is called a “switch”. Commonly used in digital circuits. Classification There are two main types of transistors: Bipolar Junction Transistor (BJT) (commonly known as a triode) and Field Effect Transistor (FET) (also known as a unipolar transistor). When a BJT operates, both electron and hole carriers are flowing; when a FET operates, only a single type of carrier is flowing. BJT The BJT has three poles Emitter, Base, and Collector. A small current from the emitter to the base causes the impedance between the emitter and the collector to change, thus changing the current flowing through it. That is, the base-emitter current controls the collector-emitter current (which can also be thought of as voltage control). In the amplification zone, it can be approximated that the former is a constant value and the latter is a number of times the former, and the transistor acts as a current amplifier. NPN Type The arrow (indicating the emitter current direction) points outward, i.e. from the base to the emitter. Most of the BJTs used today are NPN types. Define the working area according to the bias of the emitter junction (base-emitter) and collector junction (base-collector): Forward amplification zone/amplification zone (collector-emitter current is approximately linear with base-emitter current): forward bias of the emitter junction, reverse bias of the collector junction. Reverse amplification region (hardly used): emitter reverse bias, collector junction forward bias; Saturation region (can be represented as high level in digital logic): both PN junctions forward biased; Cut-off zone (can be represented as low in digital logic): both PN junctions reverse biased; Sudden collapse: the reverse bias current of the collector junction is too high and the PN junction is broken down. PNP Type The arrow points inward, i.e., from the emitter to the base. The voltage description of the working area of the PNP type is opposite to that of the NPN type. Three Types of Amplifier Structure Common Emitter The base is used as the input, the collector as the output, and the emitter is common (i.e. grounded, or connected to power). Similar to the common source of FETs. Usually used in power amplifiers, RF circuits, and low-noise amplifiers. Common Base That is, the base is grounded (or connected to a power supply). Similar to common gate of FET. Usually used in current buffers, voltage amplifiers. Not commonly used in low frequency circuits, commonly used in high frequency circuits. Common Collector That is, the collector is grounded (or connected to the power supply). Similar to common drain of FET. Usually used in voltage buffers, negative feedback amplifiers. FET Practical devices are the Junction Gate Field-Effect Transistor (JFET) and the Metal-Oxide-Semiconductor FET (MOSFET). Both are based on the same principle, but the former uses a PN junction and the latter uses a Schottky junction (a junction between a metal and a semiconductor). The three poles of a FET are Gate, Drain, and Source (corresponding to B, C, and E of a BJT). All FETs except JFETs have a fourth pole, called body, base, bulk or substrate. This fourth pole modulates the FET to operate. JFET There are two types of JFETs: N-channel and P-channel. Structure and Principle An N-channel JFET is an N-type semiconductor surrounded by a P-type semiconductor.The N-channel between Source and Drain forms a PN junction with the P-zone of Gate.Gate acts as a control. Up is the pinch-off voltage. After clip-off, it is equivalent to a constant current source (I_DSS). Symbol The arrow indicates the polarity (from P to N) of the PN junction formed by the channel and gate, and also the direction of current under forward bias. MOSFET MOSFETs are classified as NMOSFETs and PMOSFETs, and can be classified as enhanced or depleted. MOSFETs conceptually belong to Insulated-Gate Field Effect Transistor (IGFET). IGFETs mostly refer to MOSFETs. Structure and Principle MOSFETs have Body in addition to Source, Drain and Gate. The core of the MOSFET is the MOS capacitor in the center, with the Source and Drain on the left and right sides. The structure of the MOS capacitor is “Metal (often replaced by polysilicon) - Oxide (SiO2) - Semiconductor”, where the oxide is equivalent to the dielectric in a capacitor. Working Area There are three working modes, depending on the bias voltage applied at the three poles of the MOSFET. Taking the enhanced NMOS as an example: When |VGS| &lt; |Vth|, it is in the cut-off region and does not conduct. |VGS| is the bias difference from Gate to Source and |Vth| is the critical voltage of the material; When VGS &gt; Vth and VGD &gt; Vth, it is in the linear region, equivalent to a voltage controlled resistor, with a linear current-voltage relationship; When VGS &gt; Vth and VGD &lt; Vth, it is in the saturation region. Symbol Changing the dashed line to a solid line is a depletion type MOSFET. ⭐️Logic Circuit The BJT logic circuits are TTL (Transistor-Transistor Logic) and ECL (Emitter Coupled Logic), and the MOSFET logic circuits are CMOS (Complementary Metal- Oxide - Semiconductor). TTL TTL is a digital integrated circuit consisting of transistors, diodes and resistors. The most common is the 74 series. TTL is fast, CMOS is slow, but power saving and lower cost than TTL. TTL is now used mainly for educational or simpler digital circuits. CMOS CMOS consists of a pair of NMOS and PMOS. CMOS only consumes energy when switching between start-up and shutdown. ECL ECL is fast. The swing is small and the anti-interference capability is weak. The first part of the diagram is a switch to realize the “or/ or not” function; the second part is a reference voltage source to realize the temperature compensation function; the third part is an emitter follower to realize the output and isolation function.","link":"/Fundamentals-of-Electronics/"},{"title":"Hello World","text":"I made it! ","link":"/Hello-World/"},{"title":"Installing Software in Linux","text":"There are 5 ways to install software in Linux. Installation Using the APP store Available for distributions with APP store, such as Ubuntu, Manjaro, etc. In Xubuntu, the APP store is called “Software”, but it doesn’t work well because it loads very slowly. Using package management system A package management system is a collection of tools that automates the installation, update, configuration and removal of software. In Linux, many software can be installed with a single command, elegantly and quickly. In contrast to the APP store, using the package manager requires that you know in advance the name of the package in the repository where you want to install the software. For example, dpkg, which manages Debian (.deb) packages, and its front-end apt (for Debian distributions). The full name of apt is Advance Package Tool. apt Before installing, use apt search to see if the corresponding package name is in the repository. Once you have determined the package name, install it with apt install package name. Enter Y and enter to confirm the installation. Permission problem Prompt “Permission denied”, “are you root?”. To fix it, add sudo in front of the command, i.e. sudo apt install firefox. When the user inputs a password, the terminal does not display the password back for security reasons. Official software sources The list of software sources for apt is under /etc/apt/sources.list. Third-party sources You can add third-party sources and install the software if it is not in the official sources. After adding third-party sources to /etc/apt/sources.list, you can get the list of third-party software and install the required third-party software with apt install package-name. For example, install Docker by adding the Docker sources 1. Installing packages manually using the package manager In addition to installing software from official and third-party repositories, you can also directly download and install binary packages such as deb, rpm, etc., packaged by the software vendor, and install them using shell. Try to use apt to install deb, avoid using dpkg -i , because installing deb directly via dpkg will not install the required dependencies. It will only report that the corresponding dependencies are missing, and you need to fix them manually with the following command: 1$ sudo apt -f install For example, install VSCode 2. I tried but failed. First, my Linux distribution was too old to install with apt, so I used dpkg -i and made some errors; Second, I seemed to have insufficient storage space to install the whole VSCode; Finally, I made the mistake of powering off Linux, and when I booted it up again, there was no GUI, only a cursor flashing in the upper left corner. I searched for these problems, but they were not successfully solved. I had no choice but to delete the original virtual machine and add a new one. File transfer between host win10 and virtual machine ubuntu Transferring files via SSH connection to the server 3. I chose MobaXterm and successfully transferred the files. A few little penguins suddenly jumped out when the connection was disconnected _ Installing pre-compiled executables The software provider may also provide pre-compiled executables that can be run directly. For example, install a pre-compiled LLVM 4. Using source code 5 Update Locally on the computer, the system maintains a list of packages that contains software information and package dependencies. Update the software list Use apt update to get the new software version and software dependencies. Update the software After getting the new software list, use apt upgrade to update the software. Appendix Tutorial Linux 101 - chap 03: 软件安装与文件操作 [1] Linux 101 - 第三方软件源 [2] Visual Studio Code on Linux [3] 宿主机win10与虚拟机ubuntu之间的文件传输方法 [4] Linux 101 - 安装预编译可执行文件 [5] Linux 101 - 使用源代码安装","link":"/Installing-software-in-Linux/"},{"title":"Intro to Java","text":"The sections on the background of Java’s birth, development history and version descriptions were very helpful to me. Introduction Founder: James Gosling Java is somewhere between a compiled language and an interpreted language. It compiles code into a kind of “bytecode”, similar to abstract CPU instructions, and then writes virtual machines for different platforms, which are responsible for loading the bytecode and executing it, so that it can be “written once and run everywhere”. Java three versions Java SE: Standard Edition, which contains the standard JVM and standard libraries, and is the core of the entire Java platform Java EE: Enterprise Edition, which is based on Java SE with a large number of APIs and libraries to facilitate the development of Web applications, databases, messaging services, etc.; the virtual machine of Java EE is exactly the same as Java SE; it is necessary for further learning of Web applications Java ME: Micro Edition, a “thin version” for embedded devices, the standard libraries of Java SE cannot be used on Java ME; the virtual machine of Java ME is also a “thin version”; not popular, not Recommended to learn The recommended route to learn Java First learn Java SE, master the Java language itself, Java core development techniques and the use of Java standard libraries. If you continue to learn Java EE, then the Spring Framework, database development, distributed architecture is required to learn. If one wants to learn big data development, then Hadoop, Spark, Flink, these big data platforms are what one needs to learn, they are all based on Java or Scala development. If you want to learn mobile development, then go deep into the Android platform and master Android App development. JDK: Java Development Kit, in addition to containing the JRE, also provides a compiler, debugger and other development tools, used to compile Java source code into Java byte code JRE: Java Runtime Environment, is a virtual machine to run Java byte code JSR specification: Java Specification Request JCP Organization: Java Community Process RI: Reference Implementation, Reference Implementation TCK: Technology Compatibility Kit, compatibility test kit Basics Basic structure of the program 123public class Hello { // The class name is Hello // ...} // End of class definition 12345public class Hello { public static void main(String[] args) {// The method name is main// Method code... }// End of method definition} Class names must start with English letters (customary uppercase); method names must start with English letters (customary lowercase) Inside a class, several methods can be defined public is an access modifier that indicates that the class is public. It will compile correctly without public, but the class will not be executed from the command line The method specified by the Java entry program must be a static method, the method name must be `main and the arguments in parentheses must be String arrays Intelli IDEA code formatting: Ctrl + Alt + L Variables and Data Types Two types of variables: basic types and reference types Basic types are types that the CPU can perform operations on directly. They include integer, floating point, boolean, and character types The rest are reference types, which are similar to pointers in C. They store an internal “address” that points to the location of an object in memory. The most common type is String Variables of basic types “hold” a value, while those of reference types “point” to an object Constants cannot be reassigned after initialization Abbreviating variable types, using the var keyword Arithmetic Integer operations are always exact, floating point operations are often not Process control Inputs and Outputs Output System.out.println(), output with line feed System.out.print(), output without line break System.out.printf(), formatted output Input (cannot be run online, must be read from the command line) 1234567import java.util.Scanner;public class Main {publicstaticvoid main(String[] args) { Scanner scanner =new Scanner(System.in);// Creating a Scanner object String name = scanner.nextLine();// Read a line of input and get the string int age = scanner.nextInt();// Read a line of input and get the integer }} If condition judgment It is not reliable to use = to determine the equality of floating point numbers, the correct way is to use the difference is less than a certain threshold value to determine To determine whether the contents of variables of reference types are equal, you must use the equals() method Case multiple selection Always write default Starting from Java12, the new syntax uses -&gt; and if there are multiple statements, they need to be enclosed in {}. Don’t write break statements, because the new syntax will only execute the matching statement, there is no penetration effect Inside a switch expression, use yield to return a value as the return value of the switch statement While loop Judgment first, then loop Possible loop 0 times Do while loop Loop first and judge later Loop at least once For loop May loop 0 times Break and continue In a multi-layer nested loop, both can only jump out of the loop they are in Array operations Traversal, sorting, multidimensional arrays, command line arguments (omitted) Appendix Tutorial Liao Xuefeng’s Java course - Java Quick Start","link":"/Intro-to-Java/"},{"title":"Intro to Git & GitHub","text":"This is some simple notes I took when I was learning the LinkedIn course Learning Git and Github. By the way, I found it very convenient to make notes in Notion first and then export Markdown, modify it, copy and paste it into the Blog. Start 12git config --global user.name &quot;name&quot;git config --global user.email &quot;mail&quot; 1git init Staging files 12git add filenamegit add . 1git commit -m &quot;message&quot; 1git log Git environments Working Staging Commit File states 1git status Tracked (after commit) Unmodified Modified Staged Untracked Restoring files 12git restore filenamegit restore . Ignoring files Sensitive info Personal notes System files Use .gitignore file Clearing the cache 1git rm -r --cached . Deleting 1git rm filename Delete, and move to stage and ready to commit. Renaming 1git mv oldname newname Move to stage too. Showing differences 1git diff 1got log --oneline Amending 1git commit --amend 12git resetgit reset --hard Rebasing A time machine. Rewrite the history. 1git rebase Branches 1git branch Copying a branch: 1git switch -c NAME Merging: 1git merge &lt;branch&gt; Deleting a branch: 1git branch --delete NAME Git flow: Fix branch Make changes Merge to master Delete old branch Merge conflicts Choose one. Stashing 1234git stashgit stash listgit stash applygit stash pop Git clean 123git clean -ngit clean -dgit clean -f Github Cloud repository Collaborative dev Projet management Working with github: Set up remote Push Fetch/pull Pushing to github Remotes: 1234git remote add NAME URLgit remote remove NAMEgit rename OLDNAME NEWNAMEgit remote -v Git push: 123git push REMOTE BRANCHgit push -u origin maingit push --all Github options Issues Collaborate with people Write notes, like to-do items, for youself or others Assign to-do to individuals, and they can comment Pull requests Change the repo Approve changes that somebody else has made Compare different branches Actions Manage the repo (advanced) Run tests Host code automatically Download other’s actions to use Projects Manage the repo Kanban board Wiki Create documentation that is easy for people to look at (not really necessary) Security Manage policies for security (advanced) Insights Know contributors, traffic, etc (private) Settings Convert this repo to be a template Github pages Managing projects Contributors Invite a collaborator Issues Labels Milestones Projects Syncing 1git clone 1git fetch 1git pull pull = fetch + merge","link":"/Intro-to-Git-GitHub/"},{"title":"Intro to Linux","text":"I have successfully installed and used Xubuntu according to the tutorial! Great! Explosive growth in computer performance Moore’s Law: The number of transistors that can fit on an integrated circuit doubles every two years/computer performance doubles every 18 months (Intel CEO David House) The limits of quantum physics and the limitations of CPU power consumption and heat dissipation are starting to slow down the increase in computer performance. Joint collaboration between multiple CPUs (multi-core based development) is the way forward instead of pursuing individual CPU performance gains Operating system The bridge between the user and the underlying hardware Functions Process management: the operating system schedules processes so that many processes can execute concurrently on several central processors Memory management: the operating system allocates and reclaims memory appropriately File system: the operating system creates appropriate data structures to store files and data Network communication: the operating system implements various necessary network communication methods (e.g. TCP/IP) Security mechanisms: the operating system is equipped with security mechanisms to protect data from unauthorized access User Interface: Operating systems usually include a graphical user interface to facilitate the use of the computer by the user Drivers: The operating system interfaces with drivers to perform the functions of the hardware Linux was born The choice of Linux is largely a recognition of the geek spirit and open source culture. Free software means that the software’s users have freedom. (The issue is not about price.) We developed the GNU operating system so that users can have freedom in their computing. Specifically, free software means users have the four essential freedoms: (0) to run the program, (1) to study and change the program in source code form, (2) to redistribute exact copies, and (3) to distribute modified versions. Software differs from material objects—such as chairs, sandwiches, and gasoline—in that it can be copied and changed much more easily. These facilities are why software is useful; we believe a program’s users should be free to take advantage of them, not solely its developer.1 In 1983, Richard Stallman launched the GNU Project at MIT; in 1991, Linus Torvalds wrote and released the Linux kernel, which became the basis for all subsequent Linux distributions GNU: GNU is a recursive abbreviation for “GNU is Not Unix”, which refers to a UNIX-like but completely free operating system GNU General Public License (GNU GPL or GPL): grants all rights to use the software under this license to anyone who uses it This right is also known as copyleft, as opposed to the usual copyright The core GNU operating system has not been developed to date. What is actually used now is GNU/Linux, where the Linux kernel is the functional core and the GNU components are peripherals and tools for the user to operate and use the Linux kernel A common system on smartphones today is Android/Linux, an operating system based on the Linux kernel that does not use GNU components, but rather a different Android system developed by Google as a tool Linux distributions Linux distribution = Linux kernel + a set of GNU tools and libraries, some accompanying software, documentation, a desktop system, a window manager, and a desktop environment Mainstream distribution branches ****Debian branch ****: The most famous one is Ubuntu, an operating system that focuses on desktop applications and is suitable for general users. It is recommended that first-time Linux users give preference to the Ubuntu distribution or its sub-distributions (Lubuntu, Xubuntu, etc.) ****Red Hat branch ****: Fedora, CentOS (suitable for running on servers that require high stability) ****Arch Linux branch ****: requires users to be willing to understand how the OS works themselves, and does not take the approach of shielding how it works to lower the barrier to use. Variant Manjaro is more focused on ease of use and more suitable for general users Linux on the side Smartphones: The Android operating system developed by Google is part of the Android/Linux branch, also called Android native, with many sub-distributions, such as Huawei EMUI and Xiaomi MIUI, etc. Servers: Websites and software providers need to set up their own computers to perform computing, storage and communication functions, and such computers are called servers. Servers usually do not use personal computer operating systems like Windows or macOS, but mostly use Linux distributions because of their simple interfaces, powerful features, and the fact that some distributions are also supported by the services of professional computer companies (such as RHEL). debian and Ubuntu Server are very popular Embedded devices: Various distributions under the Android/Linux branch are the mainstream embedded operating systems, such as Google’s Android TV operating system for digital TV Using Linux It is recommended to use a virtual machine to run the installed Linux image Steps Get the virtual machine management software, VMware Workstation Player is recommended Get Xubuntu virtual machine image (Xubuntu is a sub-distribution of Ubuntu, very similar to Ubuntu, but smaller and less performance intensive, suitable for computers with different performance) ) Double click to open the virtual machine image, the management software will open and import the image, you can directly click the start button to start after the import is complete 拾 ~ Appendix Tutorial Linux 101 - chap 01: 初识 Linux Citation [1] Philosophy of the GNU Project Recommended Reading Why Open Source Misses the Point of Free Software","link":"/Intro-to-Linux/"},{"title":"Jan 2023","text":"In the first month of the new year, I was still organizing review notes at tortoise speed and feeling lazy. But I also learned something new. Changed blog theme again I changed blog theme to Minos in order to add the English and Chinese language options, and finally succeeded after some tinkering! And for my own aesthetic, I slightly modified the appearance. Then I found that when I clicked on the cell phone to change the language, the drop-down menu was blocked by the navigation bar. I thought of various solutions, and finally the complete display was achieved by changing the layout, so I organized it into a GitHub repository for Chinese users to use directly. . Then I found a problem again: after opening the navigation bar for articles in the config, when you read articles, the English version displayed the subheadings normally, but the Chinese was garbled. This legacy problem has not been solved yet, so for the time being, I changed it to this: English version has the navigation bar, while no such thing in Chinese version . Using Linux I found a great tutorial: Linux 101, which was written by the Linux community at USTC. Successfully used Linux and passionately sent an email to join the community and see the genius guys in it! I currently finished learning the first three chapters. About machine learning I went back to Andrew Ng’s Machine Learning videos and left freecodecamp 藍. Freecodecamp’s tutorials are very practical, knocking the code directly, but it’s too fast, while Andrew Ng is just the opposite. Well, I think if you are not in a hurry, it’s better to watch Andrew Ng’s videos first to understand the principles. Currently I just finished “P92 16.3 Integration”. When reviewing DIA, I found an article that explains the BP algorithm. I saw a post on machine learning concepts. Started drawing the PCB To be precise, I just started to draw the schematic. I’ve only used Altium Designer before, but now I need to use Cadence, and I checked the difference between the two, it seems that Altium Designer is easy to get started and has limited performance, while Cadence is more difficult and powerful. I also saw a good blog: Cadence usage and drawing board skills related. Didn’t learn the language But I got a Japanese class for next semester! Niceヽ(ﾟ▽ﾟ)ノ","link":"/Jan-2023/"},{"title":"LaTeX CV","text":"From noon yesterday to noon today, I was working on latex to make a resume. That’s very unfriendly for beginners . Luckily I finished it now! Take a look at my CV. Here’s how I did it: -&gt; If you only use latex occasionally or a few times, an onilne editor Overleaf can save you lots of troubles. You can find templates, edit and compile them. -&gt; If you want to do more things, use following steps: Download MiKTeX and VSCode MiKTeX You will get MiKTeX Consle and TeXworks. The latter is an editor but I prefer to use VSCode because it can preview pdf at another window (also because I already have VSCode). Another choose is Tex Live. It comes with a full package pre-installed, but the download is too slow and often fails so I chose MiKTeX. VSCode Remember to download extension latex workshop. Find a template On Overleaf or Github. Here are my favorites: 新卒のためのLaTeX履歴書テンプレート TLC-Resume-2021 And mine: Resume-CV (based on TLC-Resume-2021) Edit the template You may encounter many problems at this step, most of which require you to download Packages in MiKTeX Console, or other stuff like Perl. Just install the missing items as stated in the error message. Share your template Git your template to github (Already bound git and your github accounts and set SSH key) -&gt; Create a new repository -&gt; Git bash the folder which contains full files about your template -&gt; Run the following code in Git: git init git add . git commit -m &apos;Description&apos; git remote add origin https://... (copy from github) git push -u origin master Submit to Overleaf That’s where I found the original template for my CV! I think put templates there may help more people.","link":"/Latex-CV/"},{"title":"Mar 2023","text":"Play games often and study occasionally this month. I got my grades! The long wait is over. I’m satisfied that I passed all my courses last semester (though not high). I got a not bad score for Digital Image Analysis. Fortunately, there is only one closed-book exam for this semester’s major courses. The classes are also more relevant to my lab project. PCB schematic drawing The PCB drawing is still being revised again and again. I drew it according to my own understanding and sent it to my colleague, who would read it and send it back to me with detailed revision instructions. It’s awesome. Every time I revise it I sigh how ignorant and inexperienced I am … but at the same time I’m learning a lot of new things! Listening to the reports I Listened to a presentation on the topic of STCF (finally understood a little bit of the physical background of STCF), the CGG Singapore department recruitment presentation (and had dinner with the managers, and nearly had a direct interview afterwards), the Volkswagen Anhui presentation (students who were good at German showed off their skills insanely), Gamma Photon Collider presentation, the opening defense of the doctoral thesis of two colleagues, experience sharing session by an alumnus who was working in the autonomous driving industry … About Singapore, you can see Run to Singapore. Exam Registration I signed up for the Software Exam (programmer) at the end of May and the JLPT (N4) at the beginning of July! I had been trying to learn one lesson of Japanese every day, listening to the audio, and doing practice questions. I finished lesson 12 today. Getting into Splatoon 3 The game arrived more than a week ago and I played 80 + hours! I do not confess, I love Splatoon without sin . Let’s Splatoon! Splatoon Information Station Inkipedia Customizing an avatar","link":"/Mar-2023/"},{"title":"May-Aug 2023","text":"It’s been a while since I wrote a blog … It’s so hard to overcome inertia. STCF MDC FEE daughter board preliminary completion At the end of May, I finished PCB design, then the factory made the PCB, and at the end of July I tested the PCB basic function. It’s OK. I feel a sense of accomplishment! Originally, my mentor said that I might need to travel to Lanzhou in early August to test the PCB with actual detector signals, but it’s not happening because of the summer vacation. Pity. There is still a separate blog to be written about STCF. New project: White Rabbit multi-port node development This is the second project I’ve worked on recently, in collaboration with another student. We expect to design the PCB by the end of this year. White rabbit is really difficult … Again, I will write a separate blog about it next time. I’m still in a state of confusion at the moment. Some exam results The results of the final exams are almost all out, not bad … The Software exam actually passed. JLPT really didn’t pass, lol. I don’t understand Japanese! (Very perfunctory summary of three months, but it’s good to write~)","link":"/May-Aug-2023/"},{"title":"My First LinkedIn Certificate!","text":"Yeah I got it ! I have been dreaming of online learning certificates, like coursera and linkedin, for a long time. Coursera’s free plan is a week, while linkedin’s is a month so I chose the latter. (Note that for Chinese mainland users, you must change your location to Non-mainland China in your account settings to get a monthly free plan. Also you must use a Visa credit card.) Nice course Short, less than 2 hours, which is very newbie-friendly. Practical! The author introduced many useful websites for learning and developing. What I have learned Types of web development jobs For planning and prototyping: UX (User Experience) UI (User Interface) For coding and developing: Front-end Dev (Javascript, CSS, HTML; frameworks) Back-end Dev Javascript, CSS, HTML HTML identifies structural elements. CSS changes the appearance and style. JS handles the interactivity, like moving and animation. A little knowledge of Github That’s beyond my expectation, and just what I need! Looks like Github Pages Service is a good (means free) start for small and simple web dev. I’ll hands on it lately. No-code It’s a fresh new concept to me. Sounds interesting that you can develop a web without coding. But maybe the price is, the real cost – money? But it’s limited, especially when you know more and get greedy :p Useful tools Prototying tools: Figma Graphic design tools: Illustrator, Photoshop (professional) Affinity, Figma (lighter) Canva (simplest, free plan, templates) Coding editors: CodePen (online, free plan) VS Code Atom (free, highly customizable) Brackets Web host: Github Pages Service (simplest, free) No-code tools CMSs (Content Management System): Joomla! Drupal Wordpress Website builders: Squarespace, Wix, Weebly (simple) Webflow, Editor X (complex) Databases: Google Sheets Airtable Apps: Bubble (web) AppGyver (web, ios, android) Adalo, Glide (ios, android) At last, here’s my certificate and I’d like to get more in the future  ~ Appendix LinkedIn Learning Course Introducation to Web Design and Development","link":"/My-first-LinkedIn-certificate/"},{"title":"Object-oriented","text":"The three basic features of object-oriented are: encapsulation, inheritance, and polymorphism. Class &amp; Instance Class is an object template, instance is an object instance Define class (contains multiple fields, field) 1234class Person { public String name; public int age;} Create instance (variables that point to instance are reference variables) 1Person ming = new Person(); Access instance variables with Variable. Field A Java source file can contain multiple class definitions, but only one public class can be defined, and the public class name must match the file name. If you want to define multiple public classes, you must split them into multiple Java source files Method Motivation: To avoid external code to access field directly, we can modify field with private to deny external access, and then use method to allow external code to modify field indirectly Inside the method, we have the opportunity to check if the parameters are correct; external code does not have any opportunity to set the field to an unreasonable value By defining methods, a class can expose to external code the interface for some operations, while ensuring internal logic consistency The syntax for calling a method is Instance variable. Method name (parameter); Defining methods 123456789// modifier method return type method name (list of method parameters) {// Several method statements;// return method return value;// }// If there is no return value and the return type is set to void, return can be omittedpublic String getName() { return this.name;} private methods: external calls are not allowed, only the inside of the class can be called this variable: Inside the method, you can use an implicit variable this, which always points to the current instance. The fields of the current instance can be accessed through this.field. If there is no naming conflict, this can be omitted; if local variables and fields are renamed, this must be added Method parameters: 0 or any of them, used to receive the value of the variable passed to the method Variable parameters: type..., equivalent to an array type Variable parameters ensure that null cannot be passed in Parameter binding The passing of a basic type parameter is a copy of the caller’s value. Each side’s subsequent modifications do not affect each other With reference type arguments, the caller’s variable and the receiver’s argument variable point to the same object. Any modification of this object by either side affects the other (because it points to the same object) Construction method 123456789101112131415161718192021222324public class Main { public static void main(String[] args) { Person p = new Person(&quot;Xiao Ming&quot;, 15); }}class Person { private String name; private int age; // Construction method public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return this.name; } public int getAge() { return this.age; }} When an instance is created, the new operator calls its corresponding constructor method, which is used to initialize the instance The instance is actually created by the constructor method to initialize the instance The name of the constructor method is the class name. There is no restriction on the parameters of the constructor method, and you can write any statement inside the method. However, compared to normal methods, constructor methods do not have a return value (nor void), and to call a constructor method, you must use new. If no constructor method is defined, the compiler will automatically create a default constructor method with no parameters. When fields are not initialized in the constructor method, the default value is null for fields of reference types, 0 for fields of numeric types, and 0 for int types. and the default value for boolean types is false. Multi-construction methods Multiple constructors can be defined, and the compiler will automatically determine them based on the parameters. You can call another constructor inside a constructor method for easy code reuse. Overload 123456789101112// The String class provides several overloaded methods indexof()public class Main { public static void main(String[] args) { String s = &quot;Test string&quot;; int n1 = s.indexOf(&apos;t&apos;); int n2 = s.indexOf(&quot;st&quot;); int n3 = s.indexOf(&quot;st&quot;, 4); System.out.println(n1); System.out.println(n2); System.out.println(n3); }} Meaning: Method overloading refers to multiple methods with the same method name but different parameters. Function: Methods with similar functions use the same name, which is easier to remember and simpler to call. The return value type of method overloading is usually the same Inheritance 123456789101112131415161718class Person { private String name; private int age; public String getName() {...} public void setName(String name) {...} public int getAge() {...} public void setAge(int age) {...}}class Student extends Person { // Do not duplicate the name and age fields/methods, // only need to define new score fields/methods private int score; public int getScore() { … } public void setScore(int score) { … }} Function: Reuse code Use the extends keyword to implement inheritance Inheritance tree: for classes that do not explicitly write extends, the compiler will automatically add extends Object. Any class, except Object, inherits from some class A class has one and only one parent class. Only Object is special, it has no parent Subclasses can’t access the parent’s private, they can access the parent’s protected. If the parent class does not have a default constructor, the subclass must explicitly call super() with arguments in order for the compiler to locate a suitable constructor for the parent class The subclass does not inherit any of the parent’s constructor methods. The default constructor of a subclass is automatically generated by the compiler and is not inherited Blocking Inheritance 1234public sealed class Shape permits Rect, Circle, Triangle { ...}// The above Shape class allows only 3 specified classes (Rect, Circle, Triangle) to inherit from it From Java 15, use -sealed to modify the class and explicitly write the names of subclasses that can inherit from the class via -permits sealed is currently in preview state, to enable it, you must use the parameters -enable-preview and -source 15 Upcasting 1Person p = new Student(); Safely transforming a subtype into a more abstract parent type For example, if the inheritance tree is Student &gt; Person &gt; Object, then you can transform the Student type to Person, or to a higher level Object Downcasting 12345Person p = new Student();if (p instanceof Student) { // Downcasting only if judged successful Student s = (Student) p; // It will work!} It will probably fail. To avoid errors, use instanceof to first determine whether an instance is of a certain type or not Starting from Java 14, after determining instanceof, you can directly transform to the specified variable and use it directly to avoid forcing transformation again Inheritance &amp; Combination Inheritance is an “is” relationship and combination is a “has” relationship Polymorphism 12345678910111213class Person { public void run() { … }}class Student extends Person { @Override public void run() { … }}class Teacher extends Person { @Override public void run() { … }} Meaning: method calls for a certain type, where the actual method executed depends on the actual type of method at runtime Function: Allows adding more types of subclasses to extend the functionality without modifying the code based on the parent class Override Subclasses can override the methods of the parent class. The override changes the behavior of the parent class methods in the subclass. Adding @Override allows the compiler to help check if the override is done correctly. If you want to call the overridden method of the parent class in the overriding method of the subclass, you can do so with super. final final-modified methods can be prevented from being overridden A class modified by final prevents inheritance. final-modified fields must be initialized when the object is created and cannot be modified subsequently Abstract Class 123abstract class Person { public abstract void run();} Motivation: If the method of the parent class itself does not need to achieve any function, only to define the method signature, the purpose is to allow subclasses to override it, then the method of the parent class can be declared as an abstract method, itself does not achieve any method statement Meaning: If a class defines a method, but no concrete implementation code, the method is an abstract method, abstract methods are modified with abstract; because the abstract method can not be implemented, so the class must also be declared as an abstract class (abstract class) abstract class can not be instantiated Function: The abstract class can force subclasses to implement its defined abstract methods, otherwise the compilation will report an error. It is equivalent to defining a “specification” Abstract-oriented programming Upper level code only defines the specification Business logic can be implemented without subclasses (normal compilation) The specific business logic is implemented by different subclasses and the caller does not care Interface 1234interface Person { void run(); String getName();} Motivation: If an abstract class has no fields and all methods are all abstract methods, you can rewrite the abstract class as an interface An interface is a purely abstract interface that is more abstract than an abstract class, because it cannot even have fields Declare an interface using interface. When a concrete class implements an interface, the implements keyword is used; a class can implement more than one interface. Interfaces are also data types, and are suitable for both upward and downward transitions Interface Inheritance 12345678interface Hello { void hello();}interface Person extends Hello { void run(); String getName();} Using extends Inheritance relationship The public logic fits in the abstract class, the concrete logic is placed in each subclass, and the interface level represents the level of abstraction The object instantiated can only ever be a concrete subclass, but always refer to it through the interface, because interfaces are more abstract than abstract classes Default method Interfaces can define default methods Motivation: When we need to add a new method to an interface, it will involve modifying all the subclasses. If the new method is a default method, then the subclasses do not need to be modified, but only need to override the new method where it is needed. The difference between default method and abstract class ordinary method: because interface has no fields, so default method can not access the fields, while the abstract class ordinary method can access the instance fields Static Fields &amp; Static Methods Static Fields Fields modified with static are called static fields Instance Fields &amp; Static Fields Instance fields have their own separate “space” in each instance, and fields of the same name in each instance do not affect each other Static fields have only one shared “space”, which is shared by all instances It is not recommended to use `instance variables. Static fields’ to access static fields, it is recommended to use class names to access static fields Static fields can be interpreted as fields describing the class itself (not instance fields) Static methods Methods that are modified with static are called static methods Instance Methods &amp; Static Methods To call an instance method, you must pass an instance variable. To call a static method, you don’t need an instance variable, you can call it by the class name. Static methods are similar to functions in other programming languages Static methods do not require an instance and cannot access this, but they can access static fields and other static methods Static methods are often used in tool classes (e.g. Arrays.sort(), Math.random()) and auxiliary methods (e.g. the entry point of a Java program, main(), is a static method) Static fields for interfaces interface can have static fields, and the static fields must be of type `final Since interface fields can only be of type public static final, these modifiers can be removed Package 1234package ming; // Affirmation of package name mingpublic class Person {} When defining a class, you need to declare in the first line which package the class belongs to A class always belongs to a package (package), the class name (e.g. Person) is just a shorthand, the real full class name is package name. Class name As long as the package name is different, the class is different Packages can be multi-layer structures, separated by . separated by Packages have no inheritance relationship class without package name defined is the default package, very easy to cause name conflicts, not recommended to not write package name Package Scope 123456789101112131415package hello;public class Person { // Package Scope void hello() { System.out.println(&quot;Hello!&quot;); }}public class Main { public static void main(String[] args) { Person p = new Person(); p.hello(); // Can be called, because Main and Person are in the same package }} Classes located in the same package can access the fields and methods of the package scope Fields and methods that are not modified by public, protected, or private are package scoped import 1234567891011// Person.javapackage ming;// Import the full class nameimport mr.jun.Arrays;public class Person { public void run() { Arrays arrays = new Arrays(); }} The core classes of the JDK use the java.lang package, which is automatically imported by the compiler Other common classes of the JDK are defined in java.util.*, java.math.*, java.text.*, … Scope public class, interface defined as public can be accessed by any other class field, method defined as public can be accessed by other classes, provided that they have access to class first If you’re not sure whether you need public, don’t declare it as public, i.e. expose as few fields and methods as possible to the public A .java file can contain only one public class, but can contain multiple non-public classes. If there is a public class, the file name must be the same as the name of the public class private field, method defined as private cannot be accessed by other classes Access to private is restricted to the interior of class and is independent of the order of method declarations ***. It is recommended to put private methods later Nested classes have access to private. protected Acts on inheritance relationships. Fields and methods defined as protected can be accessed by subclasses, as well as subclasses of subclasses pakage Package scope means that a class is allowed to access class without public, private modifier of the same package, as well as fields and methods without public, protected, private modifier Defining methods as package permissions helps to test Local Variables Variables that are defined inside a method are called local variables The scope of a local variable starts at the point where the variable is declared and ends at the corresponding block Method parameters are also local variables The scope of local variables should be kept as small as possible, and local variables should be declared as late as possible. final Use final to prevent inheritance, overwriting by subclasses, and reassignment Nested Class Inner Class 123456789101112131415public class Main { public static void main(String[] args) { Outer outer = new Outer(&quot;Nested&quot;); // Instantiate an Outer Outer.Inner inner = outer.new Inner(); // Instantiate an Inner inner.hello(); }}class Outer { ... class Inner { // Define an Inner Class ... }} An instance of Inner Class cannot exist alone, it must be attached to an instance of Outer Class To instantiate an Inner, you must first create an instance of Outer, and then, call new on the Outer instance to create the Inner instance Inner Class can modify the private field of the Outer Class The Outer class is compiled as Outer.class, while the Inner class is compiled as Outer$Inner.class Anonymous Class 123Runnable r = new Runnable() { // Implement the necessary abstract methods...}; Another way to define an Inner Class. It is not necessary to define this Class explicitly in Outer Class Motivation: Because we don’t care about the class name here, we can write much less code than defining the Inner Class directly. Anonymous classes can also access the private fields and methods of the Outer Class Anonymous classes are compiled as Outer$1.class, Outer$2.class, Outer$3.class … In addition to interfaces, anonymous classes can also inherit from ordinary classes Inner Class and Anonymous Class are essentially the same, both must depend on an instance of Outer Class, i.e., they implicitly hold an instance of Outer.this and have private access to Outer Class Static Nested Class No longer attached to an instance of Outer, but a completely separate class, so it cannot refer to Outer.this, but can access Outer’s private static fields and static methods Static Nested Class is a separate class, but has private access to Outer Class Classpath and jar The JVM determines the path and order of searching for class through the environment variable classpath. Setting the system environment variable classpath is not recommended, it is always recommended to pass in the -cp command. The jar package is equivalent to a directory, and can contain many .class files for easy download and use Class version A higher version of the JDK can compile and output a lower version compatible class file, and vice versa may report an error Which JDK version is used at runtime, try to use the same version to compile the source code when compiling Modules The .class file is the smallest executable file seen by the JVM, and a large program needs to write many Classes and generate a bunch of .class files. The jar file is the container for the class files, for ease of management. It does not care about the dependencies between `classes Since Java 9, modules have been introduced, and the class container with its own “dependencies” is the module, which is identified by the .jmod extension Only the java.base module does not depend on any module and is the “root module” Wrapping a bunch of classes into a jar is just a packaging process, while wrapping a bunch of classes into a module requires not only packaging, but also writing dependencies, and can contain binary code (usually JNI extensions) and support multiple versions The role of modules: declare and manage dependencies; further isolate access to code Appendix Tutorial Liao Xuefeng’s Java course - Object-oriented Foundation","link":"/Object-oriented/"},{"title":"Nov 2022","text":"Leetcode Solved 64 problems on Leetcode till now. Finished the Explore Arrays 101 (the remaining one was only available for Premium). It’s very easy even for beginners like me. Got a badge! To be honest, I didn’t quite understand all the data structures in the badge 洛. I’m just familiar with arrays and strings… I plan to find time to digest the other structures, and make a sum-up. Jupyter Notebook Handed on it. I wrote a simple notebook about the process of using Logistic Regression model to classify some datas. Github Workflow Used Metrics in the homepage of my github account. It’s amazing for it can update automatically! LinkedIn Learning Certificates I will give my rating for that course under each certificate. ⭐⭐⭐⭐⭐ ⭐⭐ ⭐⭐ ⭐⭐⭐⭐ ⭐⭐⭐ English Preparing for the IELTS indicator exam. Kept on learning Japanese on Duolinguo for 42 days. I found out that there were only two Japanese language tests in China, JLPT and JTEST. JLPT is held only two times every year, and it’s often cancelled. JTEST is held more frequently, but it’s not as highly acknowledged as JLPT so I’m hesitant to prepare for it.","link":"/Nov-2022/"},{"title":"Operating Files in Linux","text":"Linux manipulates files via the command line, including viewing, editing, copying, moving, deleting, creating, searching, matching, compressing, and uncompressing files, and it’s important to learn how to use the documentation. Viewing cat 12$ # Output the entire contents of the FILE file$ cat [OPTION] FILE cat is short for concat*enate. The actual function of the cat utility is to concatenate multiple files and then output them. When there is only one file, cat will output that file directly, so the most common use of cat is to output a single file. less 12$ # Output the contents of a FILE file in an interactive window$ less FILE cat prints the entire contents to the terminal at once and exits, while less displays one page at a time and supports forward/backward scrolling, searching, etc. If you want to find a part of a large file, less is usually much more convenient than cat. Similar commands to less: more, most. Editing Nano is a command-line text editor that comes with many machines and is more novice-friendly than vim and emacs. 1$ nano FILE # Use nano to edit FILE files Copying 123456789$ # Copy the SOURCE file to the DEST file, the resulting file is DEST$ cp [OPTION] SOURCE DEST$ # Copy the SOURCE file to the DIRECTORY directory, SOURCE can be more than one file$ cp [OPTION] SOURCE... DIRECTORY$ # e.g.$ cp file1 file3 # Make a copy of file1 to the same directory as file3$ cp file1 file2 . /file/ # Copy file1, file2 files to the file directory in the same directory$ cp -r file . /test/ # Copy the file folder and all its subfiles to the test folder in the same directory Hard links and soft links Hard links have the same inode as the source file and both point to the same location on disk. Deleting one of them does not affect the other. Soft links have a different inode than the source file. Soft links save the path to the source file, and when accessing a soft link, the accessed path is replaced with the path to the source file, so accessing a soft link is also equivalent to accessing the source file. However, if the source file is deleted, the path saved by the soft link is invalid, and the soft link is therefore invalid as well1. Moving 12345$ # Move the SOURCE file to the DEST file$ mv [OPTION] SOURCE DEST$ # Move SOURCE file to DIRECTORY directory, SOURCE can be multiple files$ mv [OPTION] SOURCE... DIRECTORY Similar to “cut” in Windows. Deleting 123456789$ # Delete FILE files, FILE can be multiple files.$ # If you need to delete a directory, you need to delete it recursively with the -r option$ rm [OPTION] FILE...$ # e.g.$ rm file1 # Delete the file1 file$ rm -r test/ # Delete the test directory and all files under it$ rm -rf test1/ test2/ file1.txt # Delete the files, directories test1/, test2/, file1.txt. Among them, these files or directories may not exist, be write-protected, or not have permission to read or write Creating Creating directories 123456$ # Create a directory named DIR_NAME$ mkdir [OPTION] DIR_NAME...$ # e.g.$ mkdir test1 test2 # Create two directories with the names test1, test2$ mkdir -p test1/test2/test3/ # Create path test1/test2/test3/ Creating files 12$ # Create a file named FILE_NAME$ touch FILE_NAME... The stat command displays information about a file’s attributes. What touch actually does is modify the access time (atime) and modification time (mtime) of the file, which can be treated as touching the file, causing its access and modification times to change. When the file does not exist, touch creates a new file. Searching 1234567$ # Search for files in PATH based on EXPRESSION$ find [OPTION] PATH [EXPRESSION]$ # e.g.$ find . -name &apos;report.pdf&apos; # Search for a file named report.pdf in the current directory$ find / -size +1G # Search for files larger than 1G on the whole disk$ find ~/ -name &apos;node_modules&apos; -type d # Search for all folders named node_modules in the user directory Pattern matching The matching pattern for bash is called glob. 123$ # e.g.$ rm *.tar.gz # Remove all compressed files ending in tar.gz$ mv -r *. [ch] /path # Move all code ending in .c or .h in the current and subdirectories to /path Be sure to make sure you type correctly before using wildcards, otherwise serious consequences may occur (e.g. rm -rf * will delete all files in the current directory). Compressing and uncompressing Using tar to archive and compress files 1234567$ # The command format is as follows, please refer to the following sample usage to understand how to use$ tar [OPTIONS] FILE...$ # e.g.$ tar -c -f target.tar file1 file2 file3 # Package file1, file2, file3 as target.tar$ tar -x -f target.tar -C test/ # Extract the files in target.tar to the test directory$ tar -cz -f target.tar.gz file1 file2 file3 # Pack file1, file2, file3 and compress them using gzip to get the compressed file target.tar.gz As with most Linux commands, the tar command can combine parameters. For example, the following command is equivalent: 123$ tar -c -z -v -f target.tar test/$ tar -czvf target.tar test/$ tar -f target.tar -czv test/ The suffix name does not determine the file type, but it can help one to identify the possible file types of this file and thus choose the appropriate opening method. Documentation man commands 123$ # Call up the documentation for the tar and ls commands$ man tar$ man ls It shows the meaning of each parameter of the software, the meaning of the exit value, the author, etc. It is large and comprehensive. But generally less with the use of sample, you need to splice the software parameters according to their own needs, not conducive to quickly get started. tldr A few simple examples allow users to quickly understand how to use the software. 1$ tldr COMMAND Note that if this error is reported: 1mkdir:Unable to create directory &quot;/home/lzy/.tldr&quot;: file already exists The solution is: 1234$ sudo apt-get update$ sudo apt-get install tldr$ mkdir -p ~/.tldr/tldr$ sudo git clone https://github.com/tldr-pages/tldr.git ~/.tldr/tldr Appendix Linux 101 - chap 03: 软件安装与文件操作 [1] 阮一峰的网络日志 - 理解inode","link":"/Operating-Files-in-Linux/"},{"title":"Oct 2022","text":"Programming I finished 27 problems on Leetcode till now, and all used Java. The last explore chapter Array and String was a bit difficult, but the current one Arrays 101 is much easier. Why I’m still doing arrays? I can’t wait to deal with something new. I learnt a little of the famous course, CS61A, and did HW 01, HW 02, Lab 00, Lab 01, and I’m in Lab 02 now. I studied more seriously in the first half of the month, and slacked off in the second half. I hope I can persevere and finish this course and CS61B. The OK system is very interesting. I watched some Andrew Ng’s Machine Learning videos, from the beginning to P48 “Inference: making predictions”. My mentor asked me to learn machine learning so I was trying to get started. I also read some parts of the the classic tutorial book, Hands on Machine Learning. That’s nice, and more codes and more difficult that the videos. However, I still didn’t understand ML well. It seems easy but to do it is really hard勞. The good news was that I made a python program this afternoon finally… Matlab looked convenient, but it required too much computer performance and was a bit unstable. I was thinking of the characteristics of data… Language Insisted on watching one English video a day, especially the Economist. I also read an article named Prince in the section “Briefing”. And I began to preparing for Duolinguo English Test several days ago. My boyfriend signed up for IELTS(indicator). We all will take exams next week. Hope we all succeed! I also began to lean Japanese from Duolinguo and NHK Easy Japanese. Love this website for its simpleness. I didn’t know Japanese had tenses too. Bye for now! It’s midnight.","link":"/Oct-2022/"},{"title":"Sep 2023","text":"I feels busier recently. So that’s the second year of Master? I don’t have to take classes anymore, but the number of projects I’m involved in has increased to three: the STCF readout electronics, the White rabbit device, and the trigger electronics for water lenses, which is my graduation project. Recently, I’ve been working mainly on the WR project. The project is expected to be finished by the end of this year. It’s quite stressful and difficult since there are only two of us working on it and we’re both beginners. First of all, it’s very hard to understand the principle of WR (I still don’t understand it completely), and secondly, although there are some similar projects done by the labs, it’s still very difficult to use it and design it by myself. The plan at first was for another student to draw the schematic and PCB for the multi-node module, and for me to write the FPGA code. However until he finished drawing, I was still at the stage of trying to understand the WRPC manual … Now he is taking over the FPGA code part, and I am modifying the design based on his, and I am drawing a second board, the normal node module. The front-end amplifier plate for STCF will be taken by my colleague to the Institute of Modern Physics in Lanzhou next week for joint testing with the detector. Trigger electronics for water lenses is a topic I just finalized for my graduation project. I know almost nothing about it at the moment!","link":"/Sep-2023/"},{"title":"Process","text":"A process is a program that is running. When you start a program, the operating system first reads the program file from the hard disk, then loads the program contents into memory, and finally the CPU executes the program. This is a process. Basic concepts of Process Checking processes htop ps (process status) ps shows only the relevant processes running in this terminal. ps aux shows all processes. PID (process identifier) The PID is a number that uniquely identifies a process. The PID can be used as an index when hanging, continuing or terminating a process. Process priority NI (nice) The range of values is -20 to 19. Usually the NI value of the currently running process is 0. The higher the NI, the lower the priority. Specify the priority: 12$ nice -n 10 vim # Run vim with a nice value of 10$ renice -n 10 -p 12345 # Set the nice value of the process with PID 12345 to 10 To lower the nice value you need sudo. PRI (priority) Normally PRI = nice + 20. If the PRI value is RT, or if it is negative, the corresponding process has higher real-time requirements (e.g. kernel processes, audio-related processes, etc.). Process status Roughly divided into: Running Ready Blocked Detailed classification: State Abbreviation Description Running R Running/ready to run immediately Sleeping S Interruptible sleep Disk Sleep D Non-interruptible sleep Traced / Stopped T Traced / Suspended processes Zombie Z Zombie processes Process Control Signal Signal is a mechanism for processes to communicate with each other on Unix family systems. The Linux command that sends signals is called kill. Use man 7 signal to see the list of signals. Switching from front to back By default, commands run in the shell are run in the foreground. If you need to run in the background, you need to add &amp; to the end of the command. If you need to switch the foreground program to the background, you need to press Ctrl + Z to send SIGTSTP to hang the process and return control to the shell. 1$ bg %2 # Put process 2 into the background Terminating a process The standard signal to terminate a process is SIGTERM, which implies the natural death of a process. Sending the signal in htop Press K, select the desired signal in the left prompt bar and press enter to send it. Kill 12$ kill -l # Show all signals$ kill -9 PID # 9 for SIGKILL. End process PID immediately If you don’t add any arguments, only PID, kill will automatically use 15 (SIGTERM) as signal argument. Kill-like commands 1$ apropos kill # Show various other kill-like commands Get out of the terminal nohup Once a terminal is closed, it sends a SIGHUP (Signal Hangup) to each process in it, and the default action for SIGHUP is to quit the program running. By adding nohup before the program that needs to block SIGHUP, the runtime output will be redirected to nohup.out (which can also be customized). tmux “tmux” is a split-screen, command-line emulated terminal that runs on the command line. It can integrate multiple interactive processes in a single window and does not disappear when disconnected or temporarily logged out, but is stored in the background and can be restored immediately when logging in next time. “tmux” is divided into three parts: Session: to distinguish different jobs; Window: different pages of the session in terms of displays; Pane: different areas of the window divided by white lines. To install and open tmux: 12$ sudo apt install tmux$ tmux Shortcut keys (Ctrl + B first) Function % Left/right split screen &quot; Up and down split screen ↑ ↓ ← → The focus switches to the top, bottom, left, and right pane, and the pane being interacted with is selected in green. d (detach) Detach from tmux and return to the command line interface. z (zoom) Temporarily fullscreen the pane, and press again to restore it to its original state c Create a new window , Name the window s List all sessions If you are disconnected, use tmux attach [-t window name] to reconnect the window when you log in again. Without -t, the last opened window will be connected by default. Customizing tmux Service Daemon The only way to avoid disappearing due to terminal shutdown is to disconnect from the session at startup. Such processes, which work silently in the background, are called daemons. Service management The init scheme for most Linux distributions is systemd, whose command for managing system services is systemctl. Use the systemctl status command to see what services are running on the system. Use systemctl list-units to see the status of all systemd managed services. Use tldr to view the commands for starting, terminating, and reloading configuration of services. Customizing services Write a .service configuration file and run it. Routine tasks Refers to the implementation of periodic scheduled tasks. The main ones in Linux are at and crontab. at at is responsible for single scheduled tasks. Installation: 1$ sudo apt install at Use tldr to see how to use it. crontab crontab is responsible for periodic tasks. Unlike at, crontab is mostly implemented through configuration files. To see the usage of crontab: 1$ crontab --help Configuration format: The first half of each line is the time, and the second half is the shell execution command. # minutes hour day month week | command # Example * * * * * echo &quot;hello&quot; &gt;&gt; ~/count # Output hello every minute to count file in home directory 0,15,30,45 0-6 * jan sun command # Do something randomly every Sunday in January every year for 15 minutes from 0:00 midnight to 6:00 am The crontab.guru website can translate the configuration file into an easy-to-understand representation. Appendix Reference Tutorial Linux 101 - chap 04: 进程、前后台、服务与例行性任务 Recommended Reading 进程和线程 - 廖雪峰的官方网站 进程、线程基础知识 - 小林coding 进程的概念 &amp; 组成 &amp; 特征","link":"/Process/"},{"title":"Shell","text":"The Matrix effect is so cool. What is shell Shell is a program in Linux that accepts commands from the keyboard, hands them over to the system for execution, and returns the output of the command to the user Almost all Linux distributions provide a shell program called Bash, which is an “enhanced” version of the traditional shell Note that Windows paths are separated by a backslash \\; UNIX-like paths are separated by a forward slash /; UNIX-like systems also do not use the disk mechanism under Windows, but use a unified root directory Absolute paths &amp; relative paths 123/bin/ls # Absolute paths. /file.txt # Relative path, file.txt file in current directory... /file.txt # Relative path, file.txt file in the previous directory (parent directory) $ and # $ at the beginning of the command means that the command is run with normal user privileges # means that the command requires root privileges (the highest privilege), which is generally equivalent to $ sudo the command # at the end of the command means that the symbol and its contents are comments 123456$ A commandThe output of the command# Commands that require root privileges$ # Comments Why use shell Efficiency Once you are familiar with the command line and have an auto-completion shell program, you can save a lot of time by using the command line 1$ mv ... /source/file.txt ... /dest/ # Drag file.txt from the . /source/ folder to the . /dest/ folder Automation Scripts Automates repetitive tasks Save resources The vast majority of servers do not use a graphical interface in order to save resources Advanced system maintenance tasks Some advanced systems do not have a graphical interface and maintenance tasks can only be done from the command line; or complex configuration files need to be written by hand Looks cool! A simulation of The Matrix effects: Open the terminal emulator Install cmatrix 1$ sudo apt install cmatrix Use the cmatrix command to see the effects Press the q key or Ctrl + C to exit Simple shell commands ls: lists the contents of the (list) directory cd: change directory (change directory) pwd: View the current directory (print working directory) Appendix Tutorial Linux 101 - 第二章：个性化配置与建站体验","link":"/Shell/"},{"title":"Two-pointer","text":"In this October, I was trying to force myself to do one Leetcode problem per day. Although I missed some days, I finally finished my first “Explore”. The biggest lesson for me is an amazing technique called Two-pointer. At first I thought it’s nested two for-loops, but then I found it’s actually much more flesxible and useful. So I’d like to note it. Meaning Use two pointers at the same time to do the iteration. Application When you want to iterate the array from two ends to the middle, you can use one pointer starts from the beginning while the other pointer starts from the end. They have same steps. 123456789101112131415// Reverse Stringclass Solution { public void reverseString(char[] s) { int i = 0; int j = s.length - 1; while (i &lt; j) { char temp = s[i]; s[i] = s[j]; s[j] = temp; i++; j--; } }} 12345678910111213141516171819202122// Two Sum II - Input array is sorted// Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target numberclass Solution { public int[] twoSum(int[] numbers, int target) { int[] res = new int[2]; int start = 0; int end = numbers.length - 1; while (start &lt; end) { if (numbers[start] + numbers[end] == target) { break; } else if (numbers[start] + numbers[end] &lt; target) { start ++; } else { end --; } } res[0] = start + 1; res[1] = end + 1; return res; }} When you want one slow-runner and one fast-runner at the same time, you can use one pointer for the iteration while another one for the special position. They have different steps. 123456789101112131415// Remove Element// &quot;i&quot; for iteration and &quot;k&quot; for the elements to removeclass Solution { public int removeElement(int[] nums, int val) { int k = 0; for (int i = 0; i &lt; nums.length; i++) { if (nums[i] != val) { nums[k] = nums[i]; k++; } } return k; }} Here an important concept is introduced: in-place. An in-place algorithm is an algorithm which transforms input using no auxiliary data structure. However, a small amount of extra storage space is allowed for auxiliary variables. The input is usually overwritten by the output as the algorithm executes. An in-place algorithm updates its input sequence only through replacement or swapping of elements.1 123456789101112131415161718// Max Consecutive Ones// &quot;i&quot; for iteration and &quot;max&quot; for finding the max numberclass Solution { public int findMaxConsecutiveOnes(int[] nums) { int max = 0; int sum = 0; for (int i = 0; i &lt; nums.length; i++) { sum += nums[i]; if (nums[i] == 0) { sum = 0; } else { max = Math.max(sum, max); } } return max; }} 12345678910111213141516// Remove Duplicates from Sorted Array// &quot;i&quot; for iteration and &quot;j&quot; for the unique elementsclass Solution { public int removeDuplicates(int[] nums) { int n = nums.length; int j = 0; for (int i = 1; i &lt; n; i++) { if (nums[j] != nums[i]) { j++; nums[j] = nums[i]; } } return j + 1; }} 1234567891011121314151617181920// Move Zeroes// &quot;i&quot; for iteration and &quot;k&quot; works on the non-zero elementsclass Solution { public void moveZeroes(int[] nums) { int n = nums.length; int k = 0; for (int i = 0; i &lt; n; i++) { k = i; if (nums[i] == 0) { if (k &lt; n-1) { while (nums[k] == 0 &amp;&amp; k &lt; n-1) {k++; } int temp = nums[i]; nums[i] = nums[k]; nums[k] = temp; } } } }} My current progress: Congrats to myself and keep it up!  Appendix LeetCode Explore Array and String Citation [1] Wikipedia: In-place algorithm","link":"/Two-pointer/"},{"title":"Users, Files","text":"This is an introduction to “users” and “files” in Linux. Server administrators can create users for different users and assign different privileges to ensure the normal operation of the system. They can also create users for network services and limit the privileges to reduce the damage to the system security when the services are attacked. Modern operating systems generally distinguish between user “user” and “system user”, and divide the privileges to ensure that the integrity of the system will not be damaged by user’s misuse or malicious programs. Users in Linux You can see various user information in /etc/passwd. Root user The root user /root user has the highest privileges in the Linux operating system and can do anything to the system (including the extremely dangerous operation of deleting all system files). The root user’s data is stored under /root. Use the root privilege carefully to execute commands (such as sudo), do not execute the following commands: rm -rf / mkfs.ext4 /dev/sda dd if=/dev/urandom of=/dev/sda :(){ :|: &amp; };: System users System users are created by the system or related programs to perform system tasks such as services, e.g. nobody , www-data and so on. Do not delete these users at random. Normal users The normal user is located at /home/username/ and username is the username. Normal users can log in to the system and operate on files in their home directory. They cannot directly modify the system configuration or install or uninstall software for the system environment. Switching users sudo sudo is used to execute the specified command as another user. 123$ sudo + command # Execute the command as the root user$ sudo !!! # Execute the previous command as the root user$ sudo -u username command # Execute the command as a user other than root su su is used to switch users directly. Note that Linux distributions such as Ubuntu disable password login for the root user by default, so you can’t use su directly and have to raise privileges with sudo. 12$ sudo su # Switch to root $ su username # Switch to another user User group A user group is a collection of users. User groups can set permissions for a group of users. User groups also have a number GID (Group ID). 12345678$ group # See which user group you belong to$ passwd username # Change user username&apos;s password$ passwd # Change your own password$ sudo adduser username # Add user username$ sudo adduser --group groupname # Add the user groupname$ sudo adduser username groupname # Add user username to usergroup groupname File permissions 1234$ ls -l # View the details of the files in the current directory## eg. -rwxrw-r-- 1 ustc ustc 40 Feb 3 22:37 a_file## a_file is a normal file (-); the permission of the user it belongs to is rwx, the permission of the user group it belongs to is rw-, the permission of others is r--; both the user and the user group it belongs to is ustc## r for Read, w for Write, x for Execute, - for no corresponding permission Execute permissions For a file, execute permission means that it can be executed as program code by the operating system. If a program file does not have execute permissions, you can still view the program file itself and modify its contents, but you cannot execute it. For a directory, execute permission means that you can access the contents of the files in that directory. You can think of a directory as a “file”, which contains a list of files at the next level of the directory, “read” corresponds to the permission to read the list of files, “write” corresponds to the permission to modify the list of files (add, delete, rename files), and “execute” for actually accessing the files in the list, and cd for switching from the current directory to this directory. 1234$ chmod # change file mode bits to modify permissions$ chmod +x program # Add execute permissions to the file program (x)$ chown # change file owner Modify file owner File system hierarchy The entire UNIX family of systems starts with / (the root directory) as a tree; other partitions are “mounted” on this tree. The Filesystem Hierarchy Standard (FHS) defines the standard directory structure for Linux distributions and can be found at Filesystem Hierarchy Standard. You can also use man hier and man file-hierarchy to see the documentation on the filesystem hierarchy on your system. Appendix Linux 101 - chap 05: 用户与用户组、文件权限、文件系统层次结构","link":"/Users-Files/"}],"tags":[{"name":"Digital Signal Processing","slug":"数字信号处理","link":"/tags/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"},{"name":"Machine Learning","slug":"机器学习","link":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"MATLAB","slug":"MATLAB","link":"/tags/MATLAB/"},{"name":"Physical Electronics","slug":"物理电子学","link":"/tags/%E7%89%A9%E7%90%86%E7%94%B5%E5%AD%90%E5%AD%A6/"},{"name":"Readout Electronics","slug":"读出电子学","link":"/tags/%E8%AF%BB%E5%87%BA%E7%94%B5%E5%AD%90%E5%AD%A6/"},{"name":"Cadence PCB Design","slug":"Cadence-PCB设计","link":"/tags/Cadence-PCB%E8%AE%BE%E8%AE%A1/"},{"name":"STCF Project","slug":"STCF项目","link":"/tags/STCF%E9%A1%B9%E7%9B%AE/"},{"name":"Cadence Schematic Design","slug":"Cadence原理图设计","link":"/tags/Cadence%E5%8E%9F%E7%90%86%E5%9B%BE%E8%AE%BE%E8%AE%A1/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"Analog Electronics","slug":"模拟电子技术","link":"/tags/%E6%A8%A1%E6%8B%9F%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"LaTeX","slug":"LaTeX","link":"/tags/LaTeX/"},{"name":"Web Design","slug":"网页设计","link":"/tags/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"Data Structure & Algorithm","slug":"数据结构与算法","link":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"},{"name":"LeetCode","slug":"LeetCode","link":"/tags/LeetCode/"}],"categories":[{"name":"Learning","slug":"学习","link":"/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"Summary","slug":"总结","link":"/categories/%E6%80%BB%E7%BB%93/"},{"name":"Electronics","slug":"学习/电子学","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%94%B5%E5%AD%90%E5%AD%A6/"},{"name":"AI","slug":"学习/AI","link":"/categories/%E5%AD%A6%E4%B9%A0/AI/"},{"name":"Laboratory Work","slug":"实验室工作","link":"/categories/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E5%B7%A5%E4%BD%9C/"},{"name":"Monthly Summary","slug":"总结/月度总结","link":"/categories/%E6%80%BB%E7%BB%93/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"},{"name":"Computer Science","slug":"学习/计算机科学","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/"},{"name":"Job","slug":"工作","link":"/categories/%E5%B7%A5%E4%BD%9C/"}]}